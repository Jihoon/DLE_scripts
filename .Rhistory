boxplot(intensity_sc[,2:11], ylab ="Indirect energy intensity incl. SocTr [MJ/EUR]")
boxplot(intensity_sc1[,2:11], ylab ="Indirect energy intensity incl. SocTr [MJ/EUR]")
boxplot(totE_per_hh_sc_flat[,2:11], ylab ="Total indirect energy per hh incl. SocTr flat alloc [MJ]")
boxplot(intensity_sc_flat[,2:11], ylab ="Indirect energy intensity incl. SocTr flat alloc [MJ/EUR]")
?boxplot
dim(indirect_E_int)
eye(2)
unit_exio <- t(bridge_COICOP_EXIO) %*% diag(n_sector_coicop)
View(unit_exio)
dim(unit_exio)
colSums(unit_exio)
unit_exio <- t(bridge_COICOP_EXIO) %*% diag(n_sector_coicop)
fd_unit <- null_demand
fd_unit[FR_idx,] <- get_basic_price(unit_exio, "FR")
dim(unit_exio)
fd_unit <- null_demand_int
fd_unit[FR_idx,] <- get_basic_price(unit_exio, "FR")
null_demand_int <- matrix(0, 9600, 109)
fd_unit <- null_demand_int
fd_unit[FR_idx,] <- get_basic_price(unit_exio, "FR")
View(fd_unit)
energy_FR <- indirect_E_int %*% fd_unit   # indirect energy use from the supply chains
dim(energy_FR)
energy_int_FR <- indirect_E_int %*% fd_unit   # indirect energy use from the supply chains
dim(energy_int_FR)
for (i in 1:n_draw) {
bridge_COICOP_EXIO <- get_bridge_COICOP_EXIO()
unit_exio <- t(bridge_COICOP_EXIO) %*% diag(n_sector_coicop)
fd_unit <- null_demand_int
fd_unit[FR_idx,] <- get_basic_price(unit_exio, "FR")
energy_int_FR <- indirect_E_int %*% fd_unit   # indirect energy use from the supply chains
ind_intensity <- rbind(ind_intensity, colSums(energy_int_FR)) # Total indirect energy/hh by decile
}
boxplot(ind_intensity, ylab ="Energy intensity by consumption sector [MJ/EUR]")
ind_intensity <- vector()
null_demand_int <- matrix(0, 9600, 109)
for (i in 1:n_draw) {
bridge_COICOP_EXIO <- get_bridge_COICOP_EXIO()
unit_exio <- t(bridge_COICOP_EXIO) %*% diag(n_sector_coicop)
fd_unit <- null_demand_int
fd_unit[FR_idx,] <- get_basic_price(unit_exio, "FR")
energy_int_FR <- indirect_E_int %*% fd_unit   # indirect energy use from the supply chains
ind_intensity <- rbind(ind_intensity, colSums(energy_int_FR)) # Total indirect energy/hh by decile
}
boxplot(ind_intensity, ylab ="Energy intensity by consumption sector [MJ/EUR]")
View(ind_intensity)
boxplot(ind_intensity, xlab ="COICOP sectors", ylab ="Energy intensity by consumption sector [MJ/EUR]")
boxplot(intensity_sc[,2:11], ylab ="Indirect energy intensity incl. SocTr [MJ/EUR]")
boxplot(intensity_sc1[,2:11], ylab ="Indirect energy intensity incl. SocTr [MJ/EUR]")
# for each draw of bridging (COICOP-EXIO)
for (i in 1:n_draw) {
bridge_COICOP_EXIO <- get_bridge_COICOP_EXIO()
fd_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_decile[,2:12])
fd_sc_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr)  # Because fd_with_soctr is extended, this can inflate errors.
fd_sc_exio_f <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr_flat)  # Because fd_with_soctr is extended, this can inflate errors.
FR_fd <- null_demand
FR_sc_fd <- null_demand
FR_sc_fd_flat <- null_demand
FR_fd[FR_idx,] <- get_basic_price(fd_exio, "FR")
FR_sc_fd[FR_idx,] <- get_basic_price(fd_sc_exio, "FR")
FR_sc_fd_flat[FR_idx,] <- get_basic_price(fd_sc_exio_f, "FR")
energy_FR <- indirect_E_int %*% FR_fd   # indirect energy use from the supply chains
energy_sc_FR <- indirect_E_int %*% FR_sc_fd   # indirect energy use from the supply chains
energy_sc_FR_flat <- indirect_E_int %*% FR_sc_fd_flat   # indirect energy use from the supply chains
energy_FR[,1] <- rowSums(energy_FR[,2:11])
# colSums(energy_FR)*c(N_hh_FR, rep(N_hh_FR/10 , 10))
totE_per_hh <- rbind(totE_per_hh, colSums(energy_FR)) # Total indirect energy/hh by decile
intensity <- rbind(intensity, colSums(energy_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
totE <- rbind(totE, colSums(energy_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc <- rbind(totE_per_hh_sc, colSums(energy_sc_FR)) # Total indirect energy/hh by decile
# intensity_sc <- rbind(intensity_sc, colSums(energy_sc_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc1 <- rbind(intensity_sc1, colSums(energy_sc_FR)/colSums(fd_with_soctr)) # indirect energy intensity by decile [MJ/EUR]
totE_sc <- rbind(totE_sc, colSums(energy_sc_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc_flat <- rbind(totE_per_hh_sc_flat, colSums(energy_sc_FR_flat)) # Total indirect energy/hh by decile
# intensity_sc_flat <- rbind(intensity_sc_flat, colSums(energy_sc_FR_flat)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc1 <- rbind(intensity_sc1, colSums(energy_sc_FR)/colSums(fd_with_soctr)) # indirect energy intensity by decile [MJ/EUR]
totE_sc_flat <- rbind(totE_sc_flat, colSums(energy_sc_FR_flat)*N_hh_FR/10)  # Total indirect energy by decile
}
boxplot(intensity_sc_flat[,2:11], ylab ="Indirect energy intensity incl. SocTr flat alloc [MJ/EUR]")
# for each draw of bridging (COICOP-EXIO)
for (i in 1:n_draw) {
bridge_COICOP_EXIO <- get_bridge_COICOP_EXIO()
fd_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_decile[,2:12])
fd_sc_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr)  # Because fd_with_soctr is extended, this can inflate errors.
fd_sc_exio_f <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr_flat)  # Because fd_with_soctr is extended, this can inflate errors.
FR_fd <- null_demand
FR_sc_fd <- null_demand
FR_sc_fd_flat <- null_demand
FR_fd[FR_idx,] <- get_basic_price(fd_exio, "FR")
FR_sc_fd[FR_idx,] <- get_basic_price(fd_sc_exio, "FR")
FR_sc_fd_flat[FR_idx,] <- get_basic_price(fd_sc_exio_f, "FR")
energy_FR <- indirect_E_int %*% FR_fd   # indirect energy use from the supply chains
energy_sc_FR <- indirect_E_int %*% FR_sc_fd   # indirect energy use from the supply chains
energy_sc_FR_flat <- indirect_E_int %*% FR_sc_fd_flat   # indirect energy use from the supply chains
energy_FR[,1] <- rowSums(energy_FR[,2:11])
# colSums(energy_FR)*c(N_hh_FR, rep(N_hh_FR/10 , 10))
totE_per_hh <- rbind(totE_per_hh, colSums(energy_FR)) # Total indirect energy/hh by decile
intensity <- rbind(intensity, colSums(energy_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
totE <- rbind(totE, colSums(energy_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc <- rbind(totE_per_hh_sc, colSums(energy_sc_FR)) # Total indirect energy/hh by decile
# intensity_sc <- rbind(intensity_sc, colSums(energy_sc_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc1 <- rbind(intensity_sc1, colSums(energy_sc_FR)/colSums(fd_with_soctr)) # indirect energy intensity by decile [MJ/EUR]
totE_sc <- rbind(totE_sc, colSums(energy_sc_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc_flat <- rbind(totE_per_hh_sc_flat, colSums(energy_sc_FR_flat)) # Total indirect energy/hh by decile
intensity_sc_flat <- rbind(intensity_sc_flat, colSums(energy_sc_FR_flat)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
# intensity_sc1 <- rbind(intensity_sc1, colSums(energy_sc_FR)/colSums(fd_with_soctr)) # indirect energy intensity by decile [MJ/EUR]
totE_sc_flat <- rbind(totE_sc_flat, colSums(energy_sc_FR_flat)*N_hh_FR/10)  # Total indirect energy by decile
}
boxplot(intensity_sc_flat[,2:11], ylab ="Indirect energy intensity incl. SocTr flat alloc [MJ/EUR]")
# for each draw of bridging (COICOP-EXIO)
for (i in 1:n_draw) {
bridge_COICOP_EXIO <- get_bridge_COICOP_EXIO()
fd_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_decile[,2:12])
fd_sc_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr)  # Because fd_with_soctr is extended, this can inflate errors.
fd_sc_exio_f <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr_flat)  # Because fd_with_soctr is extended, this can inflate errors.
FR_fd <- null_demand
FR_sc_fd <- null_demand
FR_sc_fd_flat <- null_demand
FR_fd[FR_idx,] <- get_basic_price(fd_exio, "FR")
FR_sc_fd[FR_idx,] <- get_basic_price(fd_sc_exio, "FR")
FR_sc_fd_flat[FR_idx,] <- get_basic_price(fd_sc_exio_f, "FR")
energy_FR <- indirect_E_int %*% FR_fd   # indirect energy use from the supply chains
energy_sc_FR <- indirect_E_int %*% FR_sc_fd   # indirect energy use from the supply chains
energy_sc_FR_flat <- indirect_E_int %*% FR_sc_fd_flat   # indirect energy use from the supply chains
energy_FR[,1] <- rowSums(energy_FR[,2:11])
# colSums(energy_FR)*c(N_hh_FR, rep(N_hh_FR/10 , 10))
totE_per_hh <- rbind(totE_per_hh, colSums(energy_FR)) # Total indirect energy/hh by decile
intensity <- rbind(intensity, colSums(energy_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
totE <- rbind(totE, colSums(energy_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc <- rbind(totE_per_hh_sc, colSums(energy_sc_FR)) # Total indirect energy/hh by decile
# intensity_sc <- rbind(intensity_sc, colSums(energy_sc_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc1 <- rbind(intensity_sc1, colSums(energy_sc_FR)/colSums(fd_with_soctr)) # indirect energy intensity by decile [MJ/EUR]
totE_sc <- rbind(totE_sc, colSums(energy_sc_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc_flat <- rbind(totE_per_hh_sc_flat, colSums(energy_sc_FR_flat)) # Total indirect energy/hh by decile
# intensity_sc_flat <- rbind(intensity_sc_flat, colSums(energy_sc_FR_flat)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc1 <- rbind(intensity_sc1, colSums(energy_sc_FR)/colSums(fd_with_soctr_flat)) # indirect energy intensity by decile [MJ/EUR]
totE_sc_flat <- rbind(totE_sc_flat, colSums(energy_sc_FR_flat)*N_hh_FR/10)  # Total indirect energy by decile
}
boxplot(intensity_sc_flat[,2:11], ylab ="Indirect energy intensity incl. SocTr flat alloc [MJ/EUR]")
colSums(fd_with_soctr_flat)
olSums(fd_with_soctr)
colSums(fd_with_soctr)
# for each draw of bridging (COICOP-EXIO)
for (i in 1:n_draw) {
bridge_COICOP_EXIO <- get_bridge_COICOP_EXIO()
fd_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_decile[,2:12])
fd_sc_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr)  # Because fd_with_soctr is extended, this can inflate errors.
fd_sc_exio_f <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr_flat)  # Because fd_with_soctr is extended, this can inflate errors.
FR_fd <- null_demand
FR_sc_fd <- null_demand
FR_sc_fd_flat <- null_demand
FR_fd[FR_idx,] <- get_basic_price(fd_exio, "FR")
FR_sc_fd[FR_idx,] <- get_basic_price(fd_sc_exio, "FR")
FR_sc_fd_flat[FR_idx,] <- get_basic_price(fd_sc_exio_f, "FR")
energy_FR <- indirect_E_int %*% FR_fd   # indirect energy use from the supply chains
energy_sc_FR <- indirect_E_int %*% FR_sc_fd   # indirect energy use from the supply chains
energy_sc_FR_flat <- indirect_E_int %*% FR_sc_fd_flat   # indirect energy use from the supply chains
energy_FR[,1] <- rowSums(energy_FR[,2:11])
# colSums(energy_FR)*c(N_hh_FR, rep(N_hh_FR/10 , 10))
totE_per_hh <- rbind(totE_per_hh, colSums(energy_FR)) # Total indirect energy/hh by decile
intensity <- rbind(intensity, colSums(energy_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
totE <- rbind(totE, colSums(energy_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc <- rbind(totE_per_hh_sc, colSums(energy_sc_FR)) # Total indirect energy/hh by decile
# intensity_sc <- rbind(intensity_sc, colSums(energy_sc_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc1 <- rbind(intensity_sc1, colSums(energy_sc_FR)/colSums(fd_with_soctr)) # indirect energy intensity by decile [MJ/EUR]
totE_sc <- rbind(totE_sc, colSums(energy_sc_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc_flat <- rbind(totE_per_hh_sc_flat, colSums(energy_sc_FR_flat)) # Total indirect energy/hh by decile
# intensity_sc_flat <- rbind(intensity_sc_flat, colSums(energy_sc_FR_flat)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc1_flat <- rbind(intensity_sc_flat, colSums(energy_sc_FR)/colSums(fd_with_soctr_flat)) # indirect energy intensity by decile [MJ/EUR]
totE_sc_flat <- rbind(totE_sc_flat, colSums(energy_sc_FR_flat)*N_hh_FR/10)  # Total indirect energy by decile
}
totE_per_hh <- vector()
intensity <- vector()
totE <- vector()
totE_per_hh_sc <- vector()
intensity_sc <- vector()
intensity_sc1 <- vector()
totE_sc <- vector()
totE_per_hh_sc_flat <- vector()
intensity_sc_flat <- vector()
totE_sc_flat <- vector()
### Mapping COICOP-EXIO ###
# for each draw of bridging (COICOP-EXIO)
for (i in 1:n_draw) {
bridge_COICOP_EXIO <- get_bridge_COICOP_EXIO()
fd_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_decile[,2:12])
fd_sc_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr)  # Because fd_with_soctr is extended, this can inflate errors.
fd_sc_exio_f <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr_flat)  # Because fd_with_soctr is extended, this can inflate errors.
FR_fd <- null_demand
FR_sc_fd <- null_demand
FR_sc_fd_flat <- null_demand
FR_fd[FR_idx,] <- get_basic_price(fd_exio, "FR")
FR_sc_fd[FR_idx,] <- get_basic_price(fd_sc_exio, "FR")
FR_sc_fd_flat[FR_idx,] <- get_basic_price(fd_sc_exio_f, "FR")
energy_FR <- indirect_E_int %*% FR_fd   # indirect energy use from the supply chains
energy_sc_FR <- indirect_E_int %*% FR_sc_fd   # indirect energy use from the supply chains
energy_sc_FR_flat <- indirect_E_int %*% FR_sc_fd_flat   # indirect energy use from the supply chains
energy_FR[,1] <- rowSums(energy_FR[,2:11])
# colSums(energy_FR)*c(N_hh_FR, rep(N_hh_FR/10 , 10))
totE_per_hh <- rbind(totE_per_hh, colSums(energy_FR)) # Total indirect energy/hh by decile
intensity <- rbind(intensity, colSums(energy_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
totE <- rbind(totE, colSums(energy_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc <- rbind(totE_per_hh_sc, colSums(energy_sc_FR)) # Total indirect energy/hh by decile
# intensity_sc <- rbind(intensity_sc, colSums(energy_sc_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc1 <- rbind(intensity_sc1, colSums(energy_sc_FR)/colSums(fd_with_soctr)) # indirect energy intensity by decile [MJ/EUR]
totE_sc <- rbind(totE_sc, colSums(energy_sc_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc_flat <- rbind(totE_per_hh_sc_flat, colSums(energy_sc_FR_flat)) # Total indirect energy/hh by decile
# intensity_sc_flat <- rbind(intensity_sc_flat, colSums(energy_sc_FR_flat)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc1_flat <- rbind(intensity_sc_flat, colSums(energy_sc_FR)/colSums(fd_with_soctr_flat)) # indirect energy intensity by decile [MJ/EUR]
totE_sc_flat <- rbind(totE_sc_flat, colSums(energy_sc_FR_flat)*N_hh_FR/10)  # Total indirect energy by decile
}
totE_per_hh <- vector()
intensity <- vector()
totE <- vector()
totE_per_hh_sc <- vector()
intensity_sc <- vector()
intensity_sc1 <- vector()
totE_sc <- vector()
totE_per_hh_sc_flat <- vector()
intensity_sc_flat <- vector()
totE_sc_flat <- vector()
### Mapping COICOP-EXIO ###
# for each draw of bridging (COICOP-EXIO)
for (i in 1:n_draw) {
bridge_COICOP_EXIO <- get_bridge_COICOP_EXIO()
fd_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_decile[,2:12])
fd_sc_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr)  # Because fd_with_soctr is extended, this can inflate errors.
fd_sc_exio_f <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr_flat)  # Because fd_with_soctr is extended, this can inflate errors.
FR_fd <- null_demand
FR_sc_fd <- null_demand
FR_sc_fd_flat <- null_demand
FR_fd[FR_idx,] <- get_basic_price(fd_exio, "FR")
FR_sc_fd[FR_idx,] <- get_basic_price(fd_sc_exio, "FR")
FR_sc_fd_flat[FR_idx,] <- get_basic_price(fd_sc_exio_f, "FR")
energy_FR <- indirect_E_int %*% FR_fd   # indirect energy use from the supply chains
energy_sc_FR <- indirect_E_int %*% FR_sc_fd   # indirect energy use from the supply chains
energy_sc_FR_flat <- indirect_E_int %*% FR_sc_fd_flat   # indirect energy use from the supply chains
energy_FR[,1] <- rowSums(energy_FR[,2:11])
# colSums(energy_FR)*c(N_hh_FR, rep(N_hh_FR/10 , 10))
totE_per_hh <- rbind(totE_per_hh, colSums(energy_FR)) # Total indirect energy/hh by decile
intensity <- rbind(intensity, colSums(energy_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
totE <- rbind(totE, colSums(energy_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc <- rbind(totE_per_hh_sc, colSums(energy_sc_FR)) # Total indirect energy/hh by decile
# intensity_sc <- rbind(intensity_sc, colSums(energy_sc_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc1 <- rbind(intensity_sc1, colSums(energy_sc_FR)/colSums(fd_with_soctr)) # indirect energy intensity by decile [MJ/EUR]
totE_sc <- rbind(totE_sc, colSums(energy_sc_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc_flat <- rbind(totE_per_hh_sc_flat, colSums(energy_sc_FR_flat)) # Total indirect energy/hh by decile
# intensity_sc_flat <- rbind(intensity_sc_flat, colSums(energy_sc_FR_flat)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc_flat <- rbind(intensity_sc_flat, colSums(energy_sc_FR)/colSums(fd_with_soctr_flat)) # indirect energy intensity by decile [MJ/EUR]
totE_sc_flat <- rbind(totE_sc_flat, colSums(energy_sc_FR_flat)*N_hh_FR/10)  # Total indirect energy by decile
}
totE_per_hh <- vector()
intensity <- vector()
totE <- vector()
totE_per_hh_sc <- vector()
intensity_sc <- vector()
intensity_sc1 <- vector()
totE_sc <- vector()
totE_per_hh_sc_flat <- vector()
intensity_sc_flat <- vector()
totE_sc_flat <- vector()
### Mapping COICOP-EXIO ###
# for each draw of bridging (COICOP-EXIO)
for (i in 1:n_draw) {
bridge_COICOP_EXIO <- get_bridge_COICOP_EXIO()
fd_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_decile[,2:12])
fd_sc_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr)  # Because fd_with_soctr is extended, this can inflate errors.
fd_sc_exio_f <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr_flat)  # Because fd_with_soctr is extended, this can inflate errors.
FR_fd <- null_demand
FR_sc_fd <- null_demand
FR_sc_fd_flat <- null_demand
FR_fd[FR_idx,] <- get_basic_price(fd_exio, "FR")
FR_sc_fd[FR_idx,] <- get_basic_price(fd_sc_exio, "FR")
FR_sc_fd_flat[FR_idx,] <- get_basic_price(fd_sc_exio_f, "FR")
energy_FR <- indirect_E_int %*% FR_fd   # indirect energy use from the supply chains
energy_sc_FR <- indirect_E_int %*% FR_sc_fd   # indirect energy use from the supply chains
energy_sc_FR_flat <- indirect_E_int %*% FR_sc_fd_flat   # indirect energy use from the supply chains
energy_FR[,1] <- rowSums(energy_FR[,2:11])
# colSums(energy_FR)*c(N_hh_FR, rep(N_hh_FR/10 , 10))
totE_per_hh <- rbind(totE_per_hh, colSums(energy_FR)) # Total indirect energy/hh by decile
intensity <- rbind(intensity, colSums(energy_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
totE <- rbind(totE, colSums(energy_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc <- rbind(totE_per_hh_sc, colSums(energy_sc_FR)) # Total indirect energy/hh by decile
# intensity_sc <- rbind(intensity_sc, colSums(energy_sc_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc1 <- rbind(intensity_sc1, colSums(energy_sc_FR)/colSums(fd_with_soctr)) # indirect energy intensity by decile [MJ/EUR]
totE_sc <- rbind(totE_sc, colSums(energy_sc_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc_flat <- rbind(totE_per_hh_sc_flat, colSums(energy_sc_FR_flat)) # Total indirect energy/hh by decile
# intensity_sc_flat <- rbind(intensity_sc_flat, colSums(energy_sc_FR_flat)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc_flat <- rbind(intensity_sc_flat, colSums(energy_sc_FR_flat)/colSums(fd_with_soctr_flat)) # indirect energy intensity by decile [MJ/EUR]
totE_sc_flat <- rbind(totE_sc_flat, colSums(energy_sc_FR_flat)*N_hh_FR/10)  # Total indirect energy by decile
}
boxplot(intensity_sc_flat[,2:11], ylab ="Indirect energy intensity incl. SocTr flat alloc [MJ/EUR]")
boxplot(intensity_sc1[,2:11], ylab ="Indirect energy intensity incl. SocTr [MJ/EUR]")
boxplot(intensity[,2:11], ylab ="Indirect energy intensity [MJ/EUR]")
n_sector_coicop
diag(4)
totE_per_hh <- vector()
intensity <- vector()
totE <- vector()
totE_per_hh_sc <- vector()
intensity_sc <- vector()
intensity_sc1 <- vector()
totE_sc <- vector()
totE_per_hh_sc_flat <- vector()
intensity_sc_flat <- vector()
totE_sc_flat <- vector()
### Mapping COICOP-EXIO ###
# for each draw of bridging (COICOP-EXIO)
for (i in 1:n_draw) {
bridge_COICOP_EXIO <- get_bridge_COICOP_EXIO()
fd_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_decile[,2:12])
fd_sc_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr)  # Because fd_with_soctr is extended, this can inflate errors.
fd_sc_exio_f <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr_flat)  # Because fd_with_soctr is extended, this can inflate errors.
FR_fd <- null_demand
FR_sc_fd <- null_demand
FR_sc_fd_flat <- null_demand
FR_fd[FR_idx,] <- get_basic_price(fd_exio, "FR")
FR_sc_fd[FR_idx,] <- get_basic_price(fd_sc_exio, "FR")
FR_sc_fd_flat[FR_idx,] <- get_basic_price(fd_sc_exio_f, "FR")
energy_FR <- indirect_E_int %*% FR_fd   # indirect energy use from the supply chains
energy_sc_FR <- indirect_E_int %*% FR_sc_fd   # indirect energy use from the supply chains
energy_sc_FR_flat <- indirect_E_int %*% FR_sc_fd_flat   # indirect energy use from the supply chains
energy_FR[,1] <- rowSums(energy_FR[,2:11])
# colSums(energy_FR)*c(N_hh_FR, rep(N_hh_FR/10 , 10))
totE_per_hh <- rbind(totE_per_hh, colSums(energy_FR)) # Total indirect energy/hh by decile
intensity <- rbind(intensity, colSums(energy_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
totE <- rbind(totE, colSums(energy_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc <- rbind(totE_per_hh_sc, colSums(energy_sc_FR)) # Total indirect energy/hh by decile
# intensity_sc <- rbind(intensity_sc, colSums(energy_sc_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc1 <- rbind(intensity_sc1, colSums(energy_sc_FR)/colSums(fd_with_soctr)) # indirect energy intensity by decile [MJ/EUR]
totE_sc <- rbind(totE_sc, colSums(energy_sc_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc_flat <- rbind(totE_per_hh_sc_flat, colSums(energy_sc_FR_flat)) # Total indirect energy/hh by decile
# intensity_sc_flat <- rbind(intensity_sc_flat, colSums(energy_sc_FR_flat)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc_flat <- rbind(intensity_sc_flat, colSums(energy_sc_FR_flat)/colSums(fd_with_soctr_flat)) # indirect energy intensity by decile [MJ/EUR]
totE_sc_flat <- rbind(totE_sc_flat, colSums(energy_sc_FR_flat)*N_hh_FR/10)  # Total indirect energy by decile
}
# f1 <- ggplot(data = totE_per_hh, aes(x = X, y = Y, group = group) )  # lesion becomes a classifying
boxplot(totE_per_hh[,2:11], ylab ="Total indirect energy per hh [MJ]")
boxplot(intensity[,2:11], ylab ="Indirect energy intensity [MJ/EUR]")
# boxplot(totE[,2:11]/10^6, ylab ="Total indirect energy [TJ]")
boxplot(totE_per_hh_sc[,2:11], ylab ="Total indirect energy per hh incl. SocTr[MJ]")
# boxplot(intensity_sc[,2:11], ylab ="Indirect energy intensity incl. SocTr [MJ/EUR]")
boxplot(intensity_sc1[,2:11], ylab ="Indirect energy intensity incl. SocTr [MJ/EUR]")
boxplot(totE_per_hh_sc_flat[,2:11], ylab ="Total indirect energy per hh incl. SocTr flat alloc [MJ]")
boxplot(intensity_sc_flat[,2:11], ylab ="Indirect energy intensity incl. SocTr flat alloc [MJ/EUR]")
n_draw <- 10000
totE_per_hh <- vector()
intensity <- vector()
totE <- vector()
totE_per_hh_sc <- vector()
intensity_sc <- vector()
intensity_sc1 <- vector()
totE_sc <- vector()
totE_per_hh_sc_flat <- vector()
intensity_sc_flat <- vector()
totE_sc_flat <- vector()
### Mapping COICOP-EXIO ###
# for each draw of bridging (COICOP-EXIO)
for (i in 1:n_draw) {
bridge_COICOP_EXIO <- get_bridge_COICOP_EXIO()
fd_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_decile[,2:12])
fd_sc_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr)  # Because fd_with_soctr is extended, this can inflate errors.
fd_sc_exio_f <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr_flat)  # Because fd_with_soctr is extended, this can inflate errors.
FR_fd <- null_demand
FR_sc_fd <- null_demand
FR_sc_fd_flat <- null_demand
FR_fd[FR_idx,] <- get_basic_price(fd_exio, "FR")
FR_sc_fd[FR_idx,] <- get_basic_price(fd_sc_exio, "FR")
FR_sc_fd_flat[FR_idx,] <- get_basic_price(fd_sc_exio_f, "FR")
energy_FR <- indirect_E_int %*% FR_fd   # indirect energy use from the supply chains
energy_sc_FR <- indirect_E_int %*% FR_sc_fd   # indirect energy use from the supply chains
energy_sc_FR_flat <- indirect_E_int %*% FR_sc_fd_flat   # indirect energy use from the supply chains
energy_FR[,1] <- rowSums(energy_FR[,2:11])
# colSums(energy_FR)*c(N_hh_FR, rep(N_hh_FR/10 , 10))
totE_per_hh <- rbind(totE_per_hh, colSums(energy_FR)) # Total indirect energy/hh by decile
intensity <- rbind(intensity, colSums(energy_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
totE <- rbind(totE, colSums(energy_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc <- rbind(totE_per_hh_sc, colSums(energy_sc_FR)) # Total indirect energy/hh by decile
# intensity_sc <- rbind(intensity_sc, colSums(energy_sc_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc1 <- rbind(intensity_sc1, colSums(energy_sc_FR)/colSums(fd_with_soctr)) # indirect energy intensity by decile [MJ/EUR]
totE_sc <- rbind(totE_sc, colSums(energy_sc_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc_flat <- rbind(totE_per_hh_sc_flat, colSums(energy_sc_FR_flat)) # Total indirect energy/hh by decile
# intensity_sc_flat <- rbind(intensity_sc_flat, colSums(energy_sc_FR_flat)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc_flat <- rbind(intensity_sc_flat, colSums(energy_sc_FR_flat)/colSums(fd_with_soctr_flat)) # indirect energy intensity by decile [MJ/EUR]
totE_sc_flat <- rbind(totE_sc_flat, colSums(energy_sc_FR_flat)*N_hh_FR/10)  # Total indirect energy by decile
}
# f1 <- ggplot(data = totE_per_hh, aes(x = X, y = Y, group = group) )  # lesion becomes a classifying
boxplot(totE_per_hh[,2:11], ylab ="Total indirect energy per hh [MJ]")
boxplot(intensity[,2:11], ylab ="Indirect energy intensity [MJ/EUR]")
# boxplot(totE[,2:11]/10^6, ylab ="Total indirect energy [TJ]")
boxplot(totE_per_hh_sc[,2:11], ylab ="Total indirect energy per hh incl. SocTr[MJ]")
# boxplot(intensity_sc[,2:11], ylab ="Indirect energy intensity incl. SocTr [MJ/EUR]")
boxplot(intensity_sc1[,2:11], ylab ="Indirect energy intensity incl. SocTr [MJ/EUR]")
boxplot(totE_per_hh_sc_flat[,2:11], ylab ="Total indirect energy per hh incl. SocTr flat alloc [MJ]")
boxplot(intensity_sc_flat[,2:11], ylab ="Indirect energy intensity incl. SocTr flat alloc [MJ/EUR]")
n_draw <- 1000
totE_per_hh <- vector()
intensity <- vector()
totE <- vector()
totE_per_hh_sc <- vector()
intensity_sc <- vector()
intensity_sc1 <- vector()
totE_sc <- vector()
totE_per_hh_sc_flat <- vector()
intensity_sc_flat <- vector()
totE_sc_flat <- vector()
### Mapping COICOP-EXIO ###
# for each draw of bridging (COICOP-EXIO)
for (i in 1:n_draw) {
bridge_COICOP_EXIO <- get_bridge_COICOP_EXIO()
fd_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_decile[,2:12])
fd_sc_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr)  # Because fd_with_soctr is extended, this can inflate errors.
fd_sc_exio_f <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr_flat)  # Because fd_with_soctr is extended, this can inflate errors.
FR_fd <- null_demand
FR_sc_fd <- null_demand
FR_sc_fd_flat <- null_demand
FR_fd[FR_idx,] <- get_basic_price(fd_exio, "FR")
FR_sc_fd[FR_idx,] <- get_basic_price(fd_sc_exio, "FR")
FR_sc_fd_flat[FR_idx,] <- get_basic_price(fd_sc_exio_f, "FR")
energy_FR <- indirect_E_int %*% FR_fd   # indirect energy use from the supply chains
energy_sc_FR <- indirect_E_int %*% FR_sc_fd   # indirect energy use from the supply chains
energy_sc_FR_flat <- indirect_E_int %*% FR_sc_fd_flat   # indirect energy use from the supply chains
energy_FR[,1] <- rowSums(energy_FR[,2:11])
# colSums(energy_FR)*c(N_hh_FR, rep(N_hh_FR/10 , 10))
totE_per_hh <- rbind(totE_per_hh, colSums(energy_FR)) # Total indirect energy/hh by decile
intensity <- rbind(intensity, colSums(energy_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
totE <- rbind(totE, colSums(energy_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc <- rbind(totE_per_hh_sc, colSums(energy_sc_FR)) # Total indirect energy/hh by decile
# intensity_sc <- rbind(intensity_sc, colSums(energy_sc_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc1 <- rbind(intensity_sc1, colSums(energy_sc_FR)/colSums(fd_with_soctr)) # indirect energy intensity by decile [MJ/EUR]
totE_sc <- rbind(totE_sc, colSums(energy_sc_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc_flat <- rbind(totE_per_hh_sc_flat, colSums(energy_sc_FR_flat)) # Total indirect energy/hh by decile
# intensity_sc_flat <- rbind(intensity_sc_flat, colSums(energy_sc_FR_flat)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc_flat <- rbind(intensity_sc_flat, colSums(energy_sc_FR_flat)/colSums(fd_with_soctr_flat)) # indirect energy intensity by decile [MJ/EUR]
totE_sc_flat <- rbind(totE_sc_flat, colSums(energy_sc_FR_flat)*N_hh_FR/10)  # Total indirect energy by decile
}
# f1 <- ggplot(data = totE_per_hh, aes(x = X, y = Y, group = group) )  # lesion becomes a classifying
boxplot(totE_per_hh[,2:11], ylab ="Total indirect energy per hh [MJ]")
boxplot(intensity[,2:11], ylab ="Indirect energy intensity [MJ/EUR]")
# boxplot(totE[,2:11]/10^6, ylab ="Total indirect energy [TJ]")
boxplot(totE_per_hh_sc[,2:11], ylab ="Total indirect energy per hh incl. SocTr[MJ]")
# boxplot(intensity_sc[,2:11], ylab ="Indirect energy intensity incl. SocTr [MJ/EUR]")
boxplot(intensity_sc1[,2:11], ylab ="Indirect energy intensity incl. SocTr [MJ/EUR]")
boxplot(totE_per_hh_sc_flat[,2:11], ylab ="Total indirect energy per hh incl. SocTr flat alloc [MJ]")
boxplot(intensity_sc_flat[,2:11], ylab ="Indirect energy intensity incl. SocTr flat alloc [MJ/EUR]")
n_sector_coicop
paste(figure_path, "1.1 Energy consumption per hh by decile (without soc tr).png")
figure_path = "H:/MyDocuments/IO work/France/"
paste(figure_path, "1.1 Energy consumption per hh by decile (without soc tr).png")
?paste
paste(figure_path, "1.1 Energy consumption per hh by decile (without soc tr).png", sep="")
totE_per_hh <- vector()
intensity <- vector()
totE <- vector()
totE_per_hh_sc <- vector()
intensity_sc <- vector()
intensity_sc1 <- vector()
totE_sc <- vector()
totE_per_hh_sc_flat <- vector()
intensity_sc_flat <- vector()
totE_sc_flat <- vector()
### Mapping COICOP-EXIO ###
# for each draw of bridging (COICOP-EXIO)
for (i in 1:n_draw) {
bridge_COICOP_EXIO <- get_bridge_COICOP_EXIO()
fd_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_decile[,2:12])
fd_sc_exio <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr)  # Because fd_with_soctr is extended, this can inflate errors.
fd_sc_exio_f <- t(bridge_COICOP_EXIO) %*% as.matrix(fd_with_soctr_flat)  # Because fd_with_soctr is extended, this can inflate errors.
FR_fd <- null_demand
FR_sc_fd <- null_demand
FR_sc_fd_flat <- null_demand
FR_fd[FR_idx,] <- get_basic_price(fd_exio, "FR")
FR_sc_fd[FR_idx,] <- get_basic_price(fd_sc_exio, "FR")
FR_sc_fd_flat[FR_idx,] <- get_basic_price(fd_sc_exio_f, "FR")
energy_FR <- indirect_E_int %*% FR_fd   # indirect energy use from the supply chains
energy_sc_FR <- indirect_E_int %*% FR_sc_fd   # indirect energy use from the supply chains
energy_sc_FR_flat <- indirect_E_int %*% FR_sc_fd_flat   # indirect energy use from the supply chains
energy_FR[,1] <- rowSums(energy_FR[,2:11])
# colSums(energy_FR)*c(N_hh_FR, rep(N_hh_FR/10 , 10))
totE_per_hh <- rbind(totE_per_hh, colSums(energy_FR)) # Total indirect energy/hh by decile
intensity <- rbind(intensity, colSums(energy_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
totE <- rbind(totE, colSums(energy_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc <- rbind(totE_per_hh_sc, colSums(energy_sc_FR)) # Total indirect energy/hh by decile
# intensity_sc <- rbind(intensity_sc, colSums(energy_sc_FR)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc1 <- rbind(intensity_sc1, colSums(energy_sc_FR)/colSums(fd_with_soctr)) # indirect energy intensity by decile [MJ/EUR]
totE_sc <- rbind(totE_sc, colSums(energy_sc_FR)*N_hh_FR/10)  # Total indirect energy by decile
totE_per_hh_sc_flat <- rbind(totE_per_hh_sc_flat, colSums(energy_sc_FR_flat)) # Total indirect energy/hh by decile
# intensity_sc_flat <- rbind(intensity_sc_flat, colSums(energy_sc_FR_flat)/colSums(fd_decile[,2:12])) # indirect energy intensity by decile [MJ/EUR]
intensity_sc_flat <- rbind(intensity_sc_flat, colSums(energy_sc_FR_flat)/colSums(fd_with_soctr_flat)) # indirect energy intensity by decile [MJ/EUR]
totE_sc_flat <- rbind(totE_sc_flat, colSums(energy_sc_FR_flat)*N_hh_FR/10)  # Total indirect energy by decile
}
figure_path = "H:/MyDocuments/IO work/France/"
png(filename = paste(figure_path, "1.1 Energy consumption per hh by decile (without soc tr).png", sep=""), width = 781, height = 553, units = "px")
boxplot(totE_per_hh[,2:11], ylab ="Total indirect energy per hh [MJ]")
dev.off()
png(filename = paste(figure_path, "1.2 Energy intensity by decile (without soc tr).png", sep=""), width = 781, height = 553, units = "px")
boxplot(intensity[,2:11], ylab ="Indirect energy intensity [MJ/EUR]")
dev.off()
# boxplot(totE[,2:11]/10^6, ylab ="Total indirect energy [TJ]")
png(filename = paste(figure_path, "2.1 Energy consumption per hh by decile (incl. soc tr by quintile).png", sep=""), width = 781, height = 553, units = "px")
boxplot(totE_per_hh_sc[,2:11], ylab ="Total indirect energy per hh incl. SocTr[MJ]")
dev.off()
# boxplot(intensity_sc[,2:11], ylab ="Indirect energy intensity incl. SocTr [MJ/EUR]")
png(filename = paste(figure_path, "2.2 Energy intensity by decile (incl. soc tr by quintile).png", sep=""), width = 781, height = 553, units = "px")
boxplot(intensity_sc1[,2:11], ylab ="Indirect energy intensity incl. SocTr [MJ/EUR]")
dev.off()
png(filename = paste(figure_path, "3.1 Energy consumption per hh by decile (incl. soc tr flat alloc).png", sep=""), width = 781, height = 553, units = "px")
boxplot(totE_per_hh_sc_flat[,2:11], ylab ="Total indirect energy per hh incl. SocTr flat alloc [MJ]")
dev.off()
png(filename = paste(figure_path, "3.2 Energy intensity by decile (incl. soc tr flat alloc).png", sep=""), width = 781, height = 553, units = "px")
boxplot(intensity_sc_flat[,2:11], ylab ="Indirect energy intensity incl. SocTr flat alloc [MJ/EUR]")
dev.off()
