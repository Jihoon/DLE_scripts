require(XLConnect)
temp_file <- paste0(tempfile(), '.xlsx')
wb <- XLConnect::loadWorkbook(temp_file, create = TRUE)
XLConnect::createSheet(wb, name = "temp")
XLConnect::writeWorksheet(wb, data, sheet = "temp", startRow = 1, startCol = 1)
if (autofilter) setAutoFilter(wb, 'temp', aref('A1', dim(data)))
XLConnect::saveWorkbook(wb, )
system(paste(open_command, temp_file))
}
path.integ <- "C:/Users/min/IIASA/DLE - Documents/WS2 - Documents/Analysis/Final results/"
### Data import
stock.raw <- read.csv(paste0(path.integ, "stock_timeseries_JM.csv")) %>% select(-X)
build.raw <- read.csv(paste0(path.integ, "Build_timeseries.csv")) %>% select(-X)
names(build.raw) <- sapply(names(build.raw), firstup)
build.raw <- build.raw %>%
mutate(Country=gsub("Brazil", "BRA", Country)) %>%
mutate(Country=gsub("India", "IND", Country)) %>%
mutate(Country=gsub("S. Africa", "ZAF", Country))
intensity.raw <- read.csv(paste0(path.integ, "DLE intensity by comp.csv")) %>% select(-X)
ssp.raw <- read.csv(paste0(path.integ, "ssp_timeseries.csv")) %>% select(-X)
names(ssp.raw) <- sapply(names(ssp.raw), firstup)
ssp.raw <- ssp.raw %>%
mutate(Country=gsub("Brazil", "BRA", Country)) %>%
mutate(Country=gsub("India", "IND", Country)) %>%
mutate(Country=gsub("S. Africa", "ZAF", Country))
intensity.NR.raw <- read.csv(paste0(path.integ, "NR_intensities_timeseries.csv")) %>% select(-X)
names(intensity.NR.raw) <- sapply(names(intensity.NR.raw), firstup)
intensity.NR.raw <- intensity.NR.raw %>%
mutate(Country=gsub("Brazil", "BRA", Country)) %>%
mutate(Country=gsub("India", "IND", Country)) %>%
mutate(Country=gsub("S. Africa", "ZAF", Country))
### Arrange tables for consistency
name.harmonized <- gsub("Education", "Educ", names(intensity.raw))
names(intensity.raw) <- gsub("Refrigerator", "Fridge", name.harmonized)
### Merge intensity tables
intensity <- intensity.raw %>% left_join(intensity.NR.raw, by=c("Country", "Scenario", "Year", "Type", "Carrier")) %>%
mutate(Fridge=ifelse(is.na(Fridge.y), Fridge.x, Fridge.y), TV=ifelse(is.na(TV.y), TV.x, TV.y)) %>%
select(-ends_with(".x"), -ends_with(".y"))
intensity <- intensity %>% select(Scenario, Country, Type, Year, everything()) %>%
arrange(Scenario, Country, Type, Carrier, Year)
stock <- stock.raw %>% mutate(Type="OP") %>% mutate(Lighting.R=Housing.R, Lighting.U=Housing.U, AC.R=NA, AC.U=NA) %>% select(setdiff(names(intensity), "Carrier"))
build <- build.raw %>% mutate(Type="CON") %>% select(intersect(names(intensity), names(build.raw)))  # Should be in the same order
# Combining stock and build
unit.tot <- stock
unit.tot[,] <- NA
unit.tot[, which(names(stock) %in% names(build))] <- build
unit.tot <- unit.tot %>% rbind(stock) %>% arrange(Scenario, Country, Type, Year)
# Convert JM's components from unit/cap to total unit (million kcal or kg per year)
unit.tot <- unit.tot %>% left_join(ssp.raw) %>% mutate_at(vars(Clothing, Food, Footwear), funs(.*Pop)) %>% # Pop  in millions
select(-(GDP:Urban))
# Lengthen unit.tot
unit.tot <- intensity %>% select(Scenario:Carrier) %>% left_join(unit.tot) %>% select(names(intensity))
# Derive total energy
energy.calc <- (unit.tot %>% select(-(Scenario:Carrier))) * (intensity %>% select(-(Scenario:Carrier))) %>%
mutate(Mobility=Mobility*1e3) / 1e12 * 1e6 # To EJ (& all other units were in millions except Mobility)
energy.tot <- data.frame(unit.tot %>% select(Scenario:Carrier), energy.calc) %>%
mutate(yrs=Year-lag(Year,1)) %>% mutate(yrs=ifelse(yrs<0, NA, yrs))
energy.tot <- energy.tot %>% filter(Type=="OP") %>%
rbind(energy.tot %>% filter(Type=="CON") %>% mutate_at(vars(Housing.R:TV), funs(./yrs))) %>% select(-yrs)  %>%
arrange(Scenario, Country, Type, Year, Carrier)
energy.pcap <- energy.tot %>% left_join(ssp.raw %>% select(Country, Year, Pop)) %>%
mutate_at(vars(Housing.R:TV), funs(./Pop*1e9/1e6)) %>% select(-Pop)
energy.cum <- energy.pcap %>% group_by(Scenario, Country, Year) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
mutate(Tot.GJ.pcap = rowSums(.[6:22]))
EF.non.ene <- read.csv(paste0(path.integ, "Emissions by comp w.food.csv")) %>% select(-X) %>% #tCO2/m2 & gCO2/kcal
rename(Housing.R=Housing.cement.R, Housing.U=Housing.cement.U) %>% arrange(Scenario, Country, Type, Year)
EF.non.ene
# Non-energy emissions
EF.non.ene <- read.csv(paste0(path.integ, "Emissions by comp w.food.csv")) %>% select(-X) %>% #tCO2/m2 & tCO2/kcal
rename(Housing.R=Housing.cement.R, Housing.U=Housing.cement.U) %>% arrange(Scenario, Country, Type, Year)
# Combining stock and build
EF.all <- unit.tot %>% filter(Carrier=="elec") %>% select(-Carrier) %>% arrange(Scenario, Country, Type, Year)
EF.all[,] <- NA
EF.all[, which(names(EF.all) %in% names(EF.non.ene))] <- EF.non.ene
emissions.calc <- (unit.tot %>% filter(Carrier=="elec") %>% select(-(Scenario:Carrier))) * (EF.all %>% select(-(Scenario:Year)))
emissions.tot <- data.frame(EF.all %>% select(Scenario:Year), emissions.calc) # M.ton CO2
emissions.pcap <- emissions.tot %>% left_join(ssp.raw %>% select(Country, Year, Pop)) %>%
mutate_at(vars(Housing.R:TV), funs(./Pop*1e6/1e6)) %>% select(-Pop) # ton/cap
View(emissions.pcap)
EF.country <- read_xlsx(paste0(path.integ, "DLE Pathway construction.xlsx"), sheet="Emissions Calcs", range="N6:O8", col_names = FALSE) %>%
mutate(Country=c("BRA", "IND", "ZAF"))
names(EF.country)[1:2] <- c("elec", "non.elec")  # kg/MJ
EF.country <- EF.country %>% gather(Carrier, EF, -Country)
EF.tot <- energy.tot %>% group_by(Scenario, Country, Year, Carrier) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
mutate(Tot.EJ = rowSums(.[5:23])) %>% left_join(EF.country) %>%
mutate_at(vars(Housing.R:TV), funs(.*EF*1e12/1e9)) %>% # M.ton CO2e
mutate(Tot.CO2.Mton = EF*Tot.EJ*1e12/1e9)
EF.tot.sum <- EF.tot %>% group_by(Scenario, Country, Year) %>% select(Scenario, Country, Year, Tot.EJ, Tot.CO2.Mton) %>% summarise_all(sum)
# Non-energy emissions
View(EF.tot.sum)
EF.country <- read_xlsx(paste0(path.integ, "DLE Pathway construction.xlsx"), sheet="Emissions Calcs", range="N6:O8", col_names = FALSE) %>%
mutate(Country=c("BRA", "IND", "ZAF"))
names(EF.country)[1:2] <- c("elec", "non.elec")  # kg/MJ
EF.country <- EF.country %>% gather(Carrier, EF, -Country)
EF.tot <- energy.tot %>% group_by(Scenario, Country, Year, Carrier) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
mutate(Tot.EJ = rowSums(.[5:23])) %>% left_join(EF.country) %>%
mutate_at(vars(Housing.R:TV), funs(.*EF*1e12/1e9)) %>% # M.ton CO2e
mutate(Tot.CO2.Mton = EF*Tot.EJ*1e12/1e9)
EF.tot.sum <- EF.tot %>% group_by(Scenario, Country, Year) %>% select(Scenario, Country, Year, Tot.EJ, Tot.CO2.Mton) %>% summarise_all(sum)
View(EF.tot.sum)
View(EF.tot)
EF.country
EF.country <- read_xlsx(paste0(path.integ, "DLE Pathway construction.xlsx"), sheet="Emissions Calcs", range="N6:O8", col_names = FALSE) %>%
mutate(Country=c("BRA", "IND", "ZAF"))
EF.country
### Emissions
EF.country <- read_xlsx(paste0(path.integ, "DLE Pathway construction.xlsx"), sheet="Emissions Calcs", range="O6:P8", col_names = FALSE) %>%
mutate(Country=c("BRA", "IND", "ZAF"))
names(EF.country)[1:2] <- c("elec", "non.elec")  # kg/MJ
EF.country <- EF.country %>% gather(Carrier, EF, -Country)
EF.tot <- energy.tot %>% group_by(Scenario, Country, Year, Carrier) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
mutate(Tot.EJ = rowSums(.[5:23])) %>% left_join(EF.country) %>%
mutate_at(vars(Housing.R:TV), funs(.*EF*1e12/1e9)) %>% # M.ton CO2e
mutate(Tot.CO2.Mton = EF*Tot.EJ*1e12/1e9)
EF.tot.sum <- EF.tot %>% group_by(Scenario, Country, Year) %>% select(Scenario, Country, Year, Tot.EJ, Tot.CO2.Mton) %>% summarise_all(sum)
# Non-energy emissions
EF.tot.sum
EF.tot
View(EF.tot)
EF.non.ene <- read.csv(paste0(path.integ, "Emissions by comp w.food.csv")) %>% select(-X) %>% #tCO2/m2 & tCO2/kcal
rename(Housing.R=Housing.cement.R, Housing.U=Housing.cement.U) %>% arrange(Scenario, Country, Type, Year)
EF.all <- unit.tot %>% filter(Carrier=="elec") %>% select(-Carrier) %>% arrange(Scenario, Country, Type, Year)
EF.all[,] <- NA
EF.all[, which(names(EF.all) %in% names(EF.non.ene))] <- EF.non.ene
emissions.calc <- (unit.tot %>% filter(Carrier=="elec") %>% select(-(Scenario:Carrier))) * (EF.all %>% select(-(Scenario:Year)))
emissions.tot <- data.frame(EF.all %>% select(Scenario:Year), emissions.calc) # M.ton CO2
emissions.pcap <- emissions.tot %>% left_join(ssp.raw %>% select(Country, Year, Pop)) %>%
mutate_at(vars(Housing.R:TV), funs(./Pop*1e6/1e6)) %>% select(-Pop) # ton/cap
energy.cum <- energy.pcap %>% group_by(Scenario, Country, Year) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
mutate(Tot.GJ.pcap = rowSums(.[6:22]))
emissions.cum <- emissions.pcap %>% group_by(Scenario, Country, Year) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
mutate(Tot.CO2e.ton.pcap = rowSums(.[6:22]))
View(emissions.cum)
View(EF.tot)
EF.country <- read_xlsx(paste0(path.integ, "DLE Pathway construction.xlsx"), sheet="Emissions Calcs", range="O6:P8", col_names = FALSE) %>%
mutate(Country=c("BRA", "IND", "ZAF"))
names(EF.country)[1:2] <- c("elec", "non.elec")  # kg/MJ
EF.country <- EF.country %>% gather(Carrier, EF, -Country)
EF.tot <- energy.tot %>% group_by(Scenario, Country, Year, Type, Carrier) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
mutate(Tot.EJ = rowSums(.[5:23])) %>% left_join(EF.country) %>%
mutate_at(vars(Housing.R:TV), funs(.*EF*1e12/1e9)) %>% # M.ton CO2e
mutate(Tot.CO2.Mton = EF*Tot.EJ*1e12/1e9)
EF.country <- read_xlsx(paste0(path.integ, "DLE Pathway construction.xlsx"), sheet="Emissions Calcs", range="O6:P8", col_names = FALSE) %>%
mutate(Country=c("BRA", "IND", "ZAF"))
names(EF.country)[1:2] <- c("elec", "non.elec")  # kg/MJ
EF.country <- EF.country %>% gather(Carrier, EF, -Country)
EF.tot <- energy.tot %>% group_by(Scenario, Country, Year, Type, Carrier) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE)
EF.tot <- energy.tot %>% group_by(Scenario, Country, Year, Type, Carrier) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
mutate(Tot.EJ = rowSums(.[6:24])) %>% left_join(EF.country) %>%
mutate_at(vars(Housing.R:TV), funs(.*EF*1e12/1e9)) %>% # M.ton CO2e
mutate(Tot.CO2.Mton = EF*Tot.EJ*1e12/1e9)
EF.tot.sum <- EF.tot %>% group_by(Scenario, Country, Year) %>% select(Scenario, Country, Year, Tot.EJ, Tot.CO2.Mton) %>% summarise_all(sum)
EF.non.ene <- read.csv(paste0(path.integ, "Emissions by comp w.food.csv")) %>% select(-X) %>% #tCO2/m2 & tCO2/kcal
rename(Housing.R=Housing.cement.R, Housing.U=Housing.cement.U) %>% arrange(Scenario, Country, Type, Year)
EF.all <- unit.tot %>% filter(Carrier=="elec") %>% select(-Carrier) %>% arrange(Scenario, Country, Type, Year)
EF.all[,] <- NA
EF.all[, which(names(EF.all) %in% names(EF.non.ene))] <- EF.non.ene
dim(EF.tot)
dim(unit.tot)
EF.non.ene <- read.csv(paste0(path.integ, "Emissions by comp w.food.csv")) %>% select(-X) %>% #tCO2/m2 & tCO2/kcal
rename(Housing.R=Housing.cement.R, Housing.U=Housing.cement.U) %>% arrange(Scenario, Country, Type, Year)
# Seeking same dimension
# Non-energy EF has no Carrier dimension, so half the number of rows
EF.all <- unit.tot %>% filter(Carrier=="elec") %>% select(-Carrier) %>% arrange(Scenario, Country, Type, Year)
EF.all[,] <- NA
EF.all[, which(names(EF.all) %in% names(EF.non.ene))] <- EF.non.ene
emissions.calc <- (unit.tot %>% filter(Carrier=="elec") %>% select(-(Scenario:Carrier))) * (EF.all %>% select(-(Scenario:Year)))
emissions.tot <- data.frame(EF.all %>% select(Scenario:Year) %>% mutate(Carrier="non.energy"), emissions.calc) # M.ton CO2
emissions.pcap <- emissions.tot %>% left_join(ssp.raw %>% select(Country, Year, Pop)) %>%
mutate_at(vars(Housing.R:TV), funs(./Pop*1e6/1e6)) %>% select(-Pop) # ton/cap
EF.country <- read_xlsx(paste0(path.integ, "DLE Pathway construction.xlsx"), sheet="Emissions Calcs", range="O6:P8", col_names = FALSE) %>%
mutate(Country=c("BRA", "IND", "ZAF"))
names(EF.country)[1:2] <- c("elec", "non.elec")  # kg/MJ
EF.country <- EF.country %>% gather(Carrier, EF, -Country)
EF.tot <- energy.tot %>% group_by(Scenario, Country, Type, Year, Carrier) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
mutate(Tot.EJ = rowSums(.[6:24])) %>% left_join(EF.country) %>%
mutate_at(vars(Housing.R:TV), funs(.*EF*1e12/1e9)) %>% # M.ton CO2e
mutate(Tot.CO2.Mton = EF*Tot.EJ*1e12/1e9)
EF.tot.sum <- EF.tot %>% group_by(Scenario, Country, Year) %>% select(Scenario, Country, Year, Tot.EJ, Tot.CO2.Mton) %>% summarise_all(sum)
EF.non.ene <- read.csv(paste0(path.integ, "Emissions by comp w.food.csv")) %>% select(-X) %>% #tCO2/m2 & tCO2/kcal
rename(Housing.R=Housing.cement.R, Housing.U=Housing.cement.U) %>% arrange(Scenario, Country, Type, Year)
EF.all <- unit.tot %>% filter(Carrier=="elec") %>% select(-Carrier) %>% arrange(Scenario, Country, Type, Year)
EF.all[,] <- NA
EF.all[, which(names(EF.all) %in% names(EF.non.ene))] <- EF.non.ene
emissions.calc <- (unit.tot %>% filter(Carrier=="elec") %>% select(-(Scenario:Carrier))) * (EF.all %>% select(-(Scenario:Year)))
emissions.tot <- data.frame(EF.all %>% select(Scenario:Year) %>% mutate(Carrier="non.energy"), emissions.calc) # M.ton CO2
emissions.tot <- emissions.ENE.tot %>% rbind(emissions.NENE.tot)
### Emissions
EF.country <- read_xlsx(paste0(path.integ, "DLE Pathway construction.xlsx"), sheet="Emissions Calcs", range="O6:P8", col_names = FALSE) %>%
mutate(Country=c("BRA", "IND", "ZAF"))
names(EF.country)[1:2] <- c("elec", "non.elec")  # kg/MJ
EF.country <- EF.country %>% gather(Carrier, EF, -Country)
emissions.ENE.tot <- energy.tot %>% group_by(Scenario, Country, Type, Year, Carrier) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
mutate(Tot.EJ = rowSums(.[6:24])) %>% left_join(EF.country) %>%
mutate_at(vars(Housing.R:TV), funs(.*EF*1e12/1e9)) %>% # M.ton CO2e
mutate(Tot.CO2.Mton = EF*Tot.EJ*1e12/1e9)
# emissions.ENE.tot.sum <- emissions.ENE.tot %>% group_by(Scenario, Country, Year) %>% select(Scenario, Country, Year, Tot.EJ, Tot.CO2.Mton) %>% summarise_all(sum)
# Non-energy emissions
EF.non.ene <- read.csv(paste0(path.integ, "Emissions by comp w.food.csv")) %>% select(-X) %>% #tCO2/m2 & tCO2/kcal
rename(Housing.R=Housing.cement.R, Housing.U=Housing.cement.U) %>% arrange(Scenario, Country, Type, Year)
# Seeking same dimension
# Non-energy EF has no Carrier dimension, so half the number of rows
EF.all <- unit.tot %>% filter(Carrier=="elec") %>% select(-Carrier) %>% arrange(Scenario, Country, Type, Year)
EF.all[,] <- NA
EF.all[, which(names(EF.all) %in% names(EF.non.ene))] <- EF.non.ene
emissions.NENE.calc <- (unit.tot %>% filter(Carrier=="elec") %>% select(-(Scenario:Carrier))) * (EF.all %>% select(-(Scenario:Year)))
emissions.NENE.tot <- data.frame(EF.all %>% select(Scenario:Year) %>% mutate(Carrier="non.energy"), emissions.calc) # M.ton CO2
emissions.tot <- emissions.ENE.tot %>% rbind(emissions.NENE.tot)
EF.country <- read_xlsx(paste0(path.integ, "DLE Pathway construction.xlsx"), sheet="Emissions Calcs", range="O6:P8", col_names = FALSE) %>%
mutate(Country=c("BRA", "IND", "ZAF"))
names(EF.country)[1:2] <- c("elec", "non.elec")  # kg/MJ
EF.country <- EF.country %>% gather(Carrier, EF, -Country)
emissions.ENE.tot <- energy.tot %>% group_by(Scenario, Country, Type, Year, Carrier) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
mutate(Tot.EJ = rowSums(.[6:24])) %>% left_join(EF.country) %>%
mutate_at(vars(Housing.R:TV), funs(.*EF*1e12/1e9)) # M.ton CO2e
# mutate(Tot.CO2.Mton = EF*Tot.EJ*1e12/1e9)
# Non-energy emissions
EF.non.ene <- read.csv(paste0(path.integ, "Emissions by comp w.food.csv")) %>% select(-X) %>% #tCO2/m2 & tCO2/kcal
rename(Housing.R=Housing.cement.R, Housing.U=Housing.cement.U) %>% arrange(Scenario, Country, Type, Year)
# Seeking same dimension
# Non-energy EF has no Carrier dimension, so half the number of rows
EF.all <- unit.tot %>% filter(Carrier=="elec") %>% select(-Carrier) %>% arrange(Scenario, Country, Type, Year)
EF.all[,] <- NA
EF.all[, which(names(EF.all) %in% names(EF.non.ene))] <- EF.non.ene
emissions.NENE.calc <- (unit.tot %>% filter(Carrier=="elec") %>% select(-(Scenario:Carrier))) * (EF.all %>% select(-(Scenario:Year)))
emissions.NENE.tot <- data.frame(EF.all %>% select(Scenario:Year) %>% mutate(Carrier="non.energy"), emissions.calc) # M.ton CO2
EF.country
EF.country <- read_xlsx(paste0(path.integ, "DLE Pathway construction.xlsx"), sheet="Emissions Calcs", range="O6:P8", col_names = FALSE) %>%
mutate(Country=c("BRA", "IND", "ZAF"))
names(EF.country)[1:2] <- c("elec", "non.elec")  # kg/MJ
EF.country <- EF.country %>% gather(Carrier, EF, -Country)
emissions.ENE.tot <- energy.tot %>% group_by(Scenario, Country, Type, Year, Carrier) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
# mutate(Tot.EJ = rowSums(.[6:24])) %>%
left_join(EF.country) %>%
mutate_at(vars(Housing.R:TV), funs(.*EF*1e12/1e9)) %>% select(-EF) # M.ton CO2e
# mutate(Tot.CO2.Mton = EF*Tot.EJ*1e12/1e9)
# 1. Energy-related emissions
EF.ENE.country <- read_xlsx(paste0(path.integ, "DLE Pathway construction.xlsx"), sheet="Emissions Calcs", range="O6:P8", col_names = FALSE) %>%
mutate(Country=c("BRA", "IND", "ZAF"))
names(EF.ENE.country)[1:2] <- c("elec", "non.elec")  # kg/MJ
EF.ENE.country <- EF.ENE.country %>% gather(Carrier, EF, -Country)
emissions.ENE.tot <- energy.tot %>% group_by(Scenario, Country, Type, Year, Carrier) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
# mutate(Tot.EJ = rowSums(.[6:24])) %>%
left_join(EF.ENE.country) %>%
mutate_at(vars(Housing.R:TV), funs(.*EF*1e12/1e9)) %>% select(-EF) # M.ton CO2e
# mutate(Tot.CO2.Mton = EF*Tot.EJ*1e12/1e9)
# emissions.ENE.tot.sum <- emissions.ENE.tot %>% group_by(Scenario, Country, Year) %>% select(Scenario, Country, Year, Tot.EJ, Tot.CO2.Mton) %>% summarise_all(sum)
# 2. Non-energy emissions
EF.NENE <- read.csv(paste0(path.integ, "Emissions by comp w.food.csv")) %>% select(-X) %>% #tCO2/m2 & tCO2/kcal
rename(Housing.R=Housing.cement.R, Housing.U=Housing.cement.U) %>% arrange(Scenario, Country, Type, Year)
# Seeking same dimension
# Non-energy EF has no Carrier dimension, so half the number of rows
EF.NENE.all <- unit.tot %>% filter(Carrier=="elec") %>% select(-Carrier) %>% arrange(Scenario, Country, Type, Year)
EF.NENE.all[,] <- NA
EF.NENE.all[, which(names(EF.NENE.all) %in% names(EF.NENE))] <- EF.NENE
emissions.NENE.calc <- (unit.tot %>% filter(Carrier=="elec") %>% select(-(Scenario:Carrier))) * (EF.NENE.all %>% select(-(Scenario:Year)))
emissions.NENE.tot <- data.frame(EF.NENE.all %>% select(Scenario:Year) %>% mutate(Carrier="non.energy"), emissions.calc) # M.ton CO2
emissions.tot <- emissions.ENE.tot %>% rbind(emissions.NENE.tot)
emissions.tot <- emissions.ENE.tot %>% rbind(emissions.NENE.tot) %>% arrange(Scenario, Country, Type, Year, Carrier)
emissions.tot.sum <- emissions.tot %>% group_by(Scenario, Country, Year) %>%
# select(Scenario, Country, Year, Tot.EJ, Tot.CO2.Mton) %>%
summarise_all(sum)
emissions.tot.sum <- emissions.tot %>% group_by(Scenario, Country, Year) %>%
select(-Type, -Carrier) %>%
summarise_all(sum)
View(emissions.tot.sum)
emissions.tot.sum <- emissions.tot %>% group_by(Scenario, Country, Year) %>%
select(-Type, -Carrier) %>%
summarise_all(sum, na.rm=TRUE)
emissions.ENE.tot.sum <- emissions.ENE.tot %>% group_by(Scenario, Country, Year) %>%
select(-Type, -Carrier) %>%
summarise_all(sum, na.rm=TRUE)
View(emissions.ENE.tot.sum)
EF.ENE.country <- read_xlsx(paste0(path.integ, "DLE Pathway construction.xlsx"), sheet="Emissions Calcs", range="O6:P8", col_names = FALSE) %>%
mutate(Country=c("BRA", "IND", "ZAF"))
names(EF.ENE.country)[1:2] <- c("elec", "non.elec")  # kg/MJ
EF.ENE.country <- EF.ENE.country %>% gather(Carrier, EF, -Country)
EF.ENE.country
emissions.ENE.tot <- energy.tot %>% group_by(Scenario, Country, Type, Year, Carrier) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
# mutate(Tot.EJ = rowSums(.[6:24])) %>%
left_join(EF.ENE.country) %>%
mutate_at(vars(Housing.R:TV), funs(.*EF*1e12/1e9)) %>% select(-EF) # M.ton CO2e
View(emissions.ENE.tot)
View(energy.tot)
emissions.tot <- emissions.ENE.tot %>% rbind(emissions.NENE.tot) %>% arrange(Scenario, Country, Type, Year, Carrier) %>%
mutate(Tot.CO2e.ton = rowSums(.[6:24]))
View(emissions.tot)
emissions.cum <- emissions.pcap %>% group_by(Scenario, Country, Year) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
mutate(Tot.CO2e.ton.pcap = rowSums(.[6:22], na.rm=TRUE))
emissions.tot <- emissions.ENE.tot %>% rbind(emissions.NENE.tot) %>% arrange(Scenario, Country, Type, Year, Carrier) %>%
mutate(Tot.CO2e.ton = rowSums(.[6:24], na.rm=TRUE))
emissions.tot <- emissions.ENE.tot %>% rbind(emissions.NENE.tot) %>% arrange(Scenario, Country, Type, Year, Carrier) %>%
mutate(Tot.CO2e.ton = rowSums(.[6:24], na.rm=TRUE))
emissions.tot.sum <- emissions.tot %>% group_by(Scenario, Country, Year) %>%
select(-Type, -Carrier) %>%
summarise_all(sum, na.rm=TRUE)
emissions.pcap <- emissions.tot %>% left_join(ssp.raw %>% select(Country, Year, Pop)) %>%
mutate_at(vars(Housing.R:TV), funs(./Pop*1e6/1e6)) %>% select(-Pop) # ton/cap
View(emissions.pcap)
emissions.pcap <- emissions.tot %>% left_join(ssp.raw %>% select(Country, Year, Pop)) %>%
mutate_at(vars(Housing.R:TV), funs(./Pop*1e6/1e6)) %>% select(-Pop) # ton/cap
emissions.pcap.sum <- emissions.tot.sum %>% left_join(ssp.raw %>% select(Country, Year, Pop)) %>%
mutate_at(vars(Housing.R:TV), funs(./Pop*1e6/1e6)) %>% select(-Pop) # ton/cap
View(emissions.pcap.sum)
# Total in M.ton CO2e
emissions.tot <- emissions.ENE.tot %>% rbind(emissions.NENE.tot) %>% arrange(Scenario, Country, Type, Year, Carrier) %>%
mutate(Tot.CO2e.Mton = rowSums(.[6:24], na.rm=TRUE))
emissions.tot.sum <- emissions.tot %>% group_by(Scenario, Country, Year) %>%
select(-Type, -Carrier) %>%
summarise_all(sum, na.rm=TRUE)
# Total.cap in ton CO2e / cap
emissions.pcap <- emissions.tot %>% left_join(ssp.raw %>% select(Country, Year, Pop)) %>% # Pop in millions
mutate_at(vars(Housing.R:TV), funs(./Pop*1e6/1e6)) %>% select(-Pop) %>% rename(CO2e.ton.pcap=Tot.CO2e.Mton) # ton/cap
emissions.pcap.sum <- emissions.tot.sum %>% left_join(ssp.raw %>% select(Country, Year, Pop)) %>%
mutate_at(vars(Housing.R:TV), funs(./Pop*1e6/1e6)) %>% select(-Pop) %>% rename(CO2e.ton.pcap=Tot.CO2e.Mton) # ton/cap
xlsx::write.xlsx(as.data.frame(emissions.tot), paste0(path.integ, "Result - Total emissions.xlsx"), sheetName="Emissions by comp")
xlsx::write.xlsx(as.data.frame(emissions.tot.sum), paste0(path.integ, "Result - Total emissions.xlsx"), sheetName="Aggregated ", append=TRUE)
xlsx::write.xlsx(as.data.frame(emissions.pcap), paste0(path.integ, "Result - Total emissions per cap.xlsx"), sheetName="Emissions by comp")
xlsx::write.xlsx(as.data.frame(emissions.pcap.sum), paste0(path.integ, "Result - Total emissions per cap.xlsx"), sheetName="Aggregated ", append=TRUE)
emissions.tot %>% left_join(ssp.raw %>% select(Country, Year, Pop))
emissions.pcap <- emissions.tot %>% left_join(ssp.raw %>% select(Country, Year, Pop)) %>% # Pop in millions
mutate_at(vars(Housing.R:Tot.CO2e.Mton), funs(./Pop*1e6/1e6)) %>% select(-Pop) %>% rename(CO2e.ton.pcap=Tot.CO2e.Mton) # ton/cap
emissions.pcap.sum <- emissions.tot.sum %>% left_join(ssp.raw %>% select(Country, Year, Pop)) %>%
mutate_at(vars(Housing.R:Tot.CO2e.Mton), funs(./Pop*1e6/1e6)) %>% select(-Pop) %>% rename(CO2e.ton.pcap=Tot.CO2e.Mton) # ton/cap
xlsx::write.xlsx(as.data.frame(emissions.pcap), paste0(path.integ, "Result - Total emissions per cap.xlsx"), sheetName="Emissions by comp")
xlsx::write.xlsx(as.data.frame(emissions.pcap.sum), paste0(path.integ, "Result - Total emissions per cap.xlsx"), sheetName="Aggregated ", append=TRUE)
# 1. Energy-related emissions
EF.ENE.country <- read_xlsx(paste0(path.integ, "DLE Pathway construction.xlsx"), sheet="Emissions Calcs", range="O6:P8", col_names = FALSE) %>%
mutate(Country=c("BRA", "IND", "ZAF"))
names(EF.ENE.country)[1:2] <- c("elec", "non.elec")  # kg/MJ
EF.ENE.country <- EF.ENE.country %>% gather(Carrier, EF, -Country)
emissions.ENE.tot <- energy.tot %>% group_by(Scenario, Country, Type, Year, Carrier) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
# mutate(Tot.EJ = rowSums(.[6:24], na.rm=TRUE)) %>%
left_join(EF.ENE.country) %>%
mutate_at(vars(Housing.R:TV), funs(.*EF*1e12/1e9)) %>% select(-EF) # M.ton CO2e
# mutate(Tot.CO2.Mton = EF*Tot.EJ*1e12/1e9)
emissions.ENE.tot.sum <- emissions.ENE.tot %>% group_by(Scenario, Country, Year) %>%
select(-Type, -Carrier) %>%
summarise_all(sum, na.rm=TRUE)
# 2. Non-energy emissions
EF.NENE <- read.csv(paste0(path.integ, "Emissions by comp w.food.csv")) %>% select(-X) %>% #tCO2/m2 & tCO2/kcal
rename(Housing.R=Housing.cement.R, Housing.U=Housing.cement.U) %>% arrange(Scenario, Country, Type, Year)
# Seeking same dimension
# Non-energy EF has no Carrier dimension, so half the number of rows
EF.NENE.all <- unit.tot %>% filter(Carrier=="elec") %>% select(-Carrier) %>% arrange(Scenario, Country, Type, Year)
EF.NENE.all[,] <- NA
EF.NENE.all[, which(names(EF.NENE.all) %in% names(EF.NENE))] <- EF.NENE
EF.NENE[is.na(EF.NENE)] <- 0
emissions.NENE.calc <- (unit.tot %>% filter(Carrier=="elec") %>% select(-(Scenario:Carrier))) * (EF.NENE.all %>% select(-(Scenario:Year)))
emissions.NENE.tot <- data.frame(EF.NENE.all %>% select(Scenario:Year) %>% mutate(Carrier="non.energy"), emissions.calc) # M.ton CO2
# Total in M.ton CO2e
emissions.tot <- emissions.ENE.tot %>% rbind(emissions.NENE.tot) %>% arrange(Scenario, Country, Type, Year, Carrier) %>%
mutate(Tot.CO2e.Mton = rowSums(.[6:24], na.rm=TRUE))
emissions.tot.sum <- emissions.tot %>% group_by(Scenario, Country, Year) %>%
select(-Type, -Carrier) %>%
summarise_all(sum, na.rm=TRUE)
# Total.cap in ton CO2e / cap
emissions.pcap <- emissions.tot %>% left_join(ssp.raw %>% select(Country, Year, Pop)) %>% # Pop in millions
mutate_at(vars(Housing.R:Tot.CO2e.Mton), funs(./Pop*1e6/1e6)) %>% select(-Pop) %>% rename(CO2e.ton.pcap=Tot.CO2e.Mton) # ton/cap
emissions.pcap.sum <- emissions.tot.sum %>% left_join(ssp.raw %>% select(Country, Year, Pop)) %>%
mutate_at(vars(Housing.R:Tot.CO2e.Mton), funs(./Pop*1e6/1e6)) %>% select(-Pop) %>% rename(CO2e.ton.pcap=Tot.CO2e.Mton) # ton/cap
# emissions.cum <- emissions.pcap %>% group_by(Scenario, Country, Year) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
#   mutate(Tot.CO2e.ton.pcap = rowSums(.[6:22], na.rm=TRUE))
# Save emissions output
xlsx::write.xlsx(as.data.frame(emissions.tot), paste0(path.integ, "Result - Total emissions.xlsx"), sheetName="Emissions by comp")
xlsx::write.xlsx(as.data.frame(emissions.tot.sum), paste0(path.integ, "Result - Total emissions.xlsx"), sheetName="Aggregated ", append=TRUE)
xlsx::write.xlsx(as.data.frame(emissions.pcap), paste0(path.integ, "Result - Total emissions per cap.xlsx"), sheetName="Emissions by comp")
xlsx::write.xlsx(as.data.frame(emissions.pcap.sum), paste0(path.integ, "Result - Total emissions per cap.xlsx"), sheetName="Aggregated ", append=TRUE)
xlsx::write.xlsx(as.data.frame(emissions.pcap), paste0(path.integ, "Result - Total emissions per cap.xlsx"), sheetName="Emissions by comp")
xlsx::write.xlsx(as.data.frame(emissions.pcap.sum), paste0(path.integ, "Result - Total emissions per cap.xlsx"), sheetName="Aggregated ", append=TRUE)
EF.NENE <- read.csv(paste0(path.integ, "Emissions by comp w.food.csv")) %>% select(-X) %>% #tCO2/m2 & tCO2/kcal
rename(Housing.R=Housing.cement.R, Housing.U=Housing.cement.U) %>% arrange(Scenario, Country, Type, Year)
# Seeking same dimension
# Non-energy EF has no Carrier dimension, so half the number of rows
EF.NENE.all <- unit.tot %>% filter(Carrier=="elec") %>% select(-Carrier) %>% arrange(Scenario, Country, Type, Year)
EF.NENE.all[,] <- NA
EF.NENE.all[, which(names(EF.NENE.all) %in% names(EF.NENE))] <- EF.NENE
EF.NENE.all[is.na(EF.NENE.all)] <- 0
emissions.NENE.calc <- (unit.tot %>% filter(Carrier=="elec") %>% select(-(Scenario:Carrier))) * (EF.NENE.all %>% select(-(Scenario:Year)))
emissions.NENE.tot <- data.frame(EF.NENE.all %>% select(Scenario:Year) %>% mutate(Carrier="non.energy"), emissions.calc) # M.ton CO2
# Total in M.ton CO2e
emissions.tot <- emissions.ENE.tot %>% rbind(emissions.NENE.tot) %>% arrange(Scenario, Country, Type, Year, Carrier) %>%
mutate(Tot.CO2e.Mton = rowSums(.[6:24], na.rm=TRUE))
emissions.tot.sum <- emissions.tot %>% group_by(Scenario, Country, Year) %>%
select(-Type, -Carrier) %>%
summarise_all(sum, na.rm=TRUE)
# Total.cap in ton CO2e / cap
emissions.pcap <- emissions.tot %>% left_join(ssp.raw %>% select(Country, Year, Pop)) %>% # Pop in millions
mutate_at(vars(Housing.R:Tot.CO2e.Mton), funs(./Pop*1e6/1e6)) %>% select(-Pop) %>% rename(CO2e.ton.pcap=Tot.CO2e.Mton) # ton/cap
emissions.pcap.sum <- emissions.tot.sum %>% left_join(ssp.raw %>% select(Country, Year, Pop)) %>%
mutate_at(vars(Housing.R:Tot.CO2e.Mton), funs(./Pop*1e6/1e6)) %>% select(-Pop) %>% rename(CO2e.ton.pcap=Tot.CO2e.Mton) # ton/cap
# emissions.cum <- emissions.pcap %>% group_by(Scenario, Country, Year) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
#   mutate(Tot.CO2e.ton.pcap = rowSums(.[6:22], na.rm=TRUE))
# Save emissions output
xlsx::write.xlsx(as.data.frame(emissions.tot), paste0(path.integ, "Result - Total emissions.xlsx"), sheetName="Emissions by comp")
xlsx::write.xlsx(as.data.frame(emissions.tot.sum), paste0(path.integ, "Result - Total emissions.xlsx"), sheetName="Aggregated ", append=TRUE)
xlsx::write.xlsx(as.data.frame(emissions.pcap), paste0(path.integ, "Result - Total emissions per cap.xlsx"), sheetName="Emissions by comp")
xlsx::write.xlsx(as.data.frame(emissions.pcap.sum), paste0(path.integ, "Result - Total emissions per cap.xlsx"), sheetName="Aggregated ", append=TRUE)
View(EF.NENE.all)
emissions.NENE.calc <- (unit.tot %>% filter(Carrier=="elec") %>% select(-(Scenario:Carrier))) * (EF.NENE.all %>% select(-(Scenario:Year)))
View(emissions.NENE.calc)
EF.NENE <- read.csv(paste0(path.integ, "Emissions by comp w.food.csv")) %>% select(-X) %>% #tCO2/m2 & tCO2/kcal
rename(Housing.R=Housing.cement.R, Housing.U=Housing.cement.U) %>% arrange(Scenario, Country, Type, Year)
# Seeking same dimension
# Non-energy EF has no Carrier dimension, so half the number of rows
EF.NENE.all <- unit.tot %>% filter(Carrier=="elec") %>% select(-Carrier) %>% arrange(Scenario, Country, Type, Year)
EF.NENE.all[,] <- NA
EF.NENE.all[, which(names(EF.NENE.all) %in% names(EF.NENE))] <- EF.NENE
emissions.NENE.calc <- (unit.tot %>% filter(Carrier=="elec") %>% select(-(Scenario:Carrier))) * (EF.NENE.all %>% select(-(Scenario:Year)))
emissions.NENE.tot <- data.frame(EF.NENE.all %>% select(Scenario:Year) %>% mutate(Carrier="non.energy"), emissions.calc) # M.ton CO2
# Total in M.ton CO2e
emissions.tot <- emissions.ENE.tot %>% rbind(emissions.NENE.tot) %>% arrange(Scenario, Country, Type, Year, Carrier) %>%
mutate(Tot.CO2e.Mton = rowSums(.[6:24], na.rm=TRUE))
emissions.tot[is.na(emissions.tot)] <- 0
emissions.tot.sum <- emissions.tot %>% group_by(Scenario, Country, Year) %>%
select(-Type, -Carrier) %>%
summarise_all(sum, na.rm=TRUE)
# Total.cap in ton CO2e / cap
emissions.pcap <- emissions.tot %>% left_join(ssp.raw %>% select(Country, Year, Pop)) %>% # Pop in millions
mutate_at(vars(Housing.R:Tot.CO2e.Mton), funs(./Pop*1e6/1e6)) %>% select(-Pop) %>% rename(CO2e.ton.pcap=Tot.CO2e.Mton) # ton/cap
emissions.pcap.sum <- emissions.tot.sum %>% left_join(ssp.raw %>% select(Country, Year, Pop)) %>%
mutate_at(vars(Housing.R:Tot.CO2e.Mton), funs(./Pop*1e6/1e6)) %>% select(-Pop) %>% rename(CO2e.ton.pcap=Tot.CO2e.Mton) # ton/cap
# emissions.cum <- emissions.pcap %>% group_by(Scenario, Country, Year)
# Save emissions output
xlsx::write.xlsx(as.data.frame(emissions.tot), paste0(path.integ, "Result - Total emissions.xlsx"), sheetName="Emissions by comp")
xlsx::write.xlsx(as.data.frame(emissions.tot.sum), paste0(path.integ, "Result - Total emissions.xlsx"), sheetName="Aggregated ", append=TRUE)
xlsx::write.xlsx(as.data.frame(emissions.pcap), paste0(path.integ, "Result - Total emissions per cap.xlsx"), sheetName="Emissions by comp")
xlsx::write.xlsx(as.data.frame(emissions.pcap.sum), paste0(path.integ, "Result - Total emissions per cap.xlsx"), sheetName="Aggregated ", append=TRUE)
energy.calc <- (unit.tot %>% select(-(Scenario:Carrier))) * (intensity %>% select(-(Scenario:Carrier))) %>%
mutate(Mobility=Mobility*1e3) / 1e12 * 1e6 # To EJ (& all other units were in millions except Mobility)
energy.tot <- data.frame(unit.tot %>% select(Scenario:Carrier), energy.calc) %>%
mutate(yrs=Year-lag(Year,1)) %>% mutate(yrs=ifelse(yrs<0, NA, yrs))
energy.tot <- energy.tot %>% filter(Type=="OP") %>%
rbind(energy.tot %>% filter(Type=="CON") %>% mutate_at(vars(Housing.R:TV), funs(./yrs))) %>% select(-yrs)  %>%
arrange(Scenario, Country, Type, Year, Carrier)
energy.pcap <- energy.tot %>% left_join(ssp.raw %>% select(Country, Year, Pop)) %>%
mutate_at(vars(Housing.R:TV), funs(./Pop*1e9/1e6)) %>% select(-Pop)
energy.pcap.sum <- energy.pcap %>% group_by(Scenario, Country, Year) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
mutate(Tot.GJ.pcap = rowSums(.[6:22], na.rm=TRUE))
xlsx::write.xlsx(as.data.frame(energy.tot), paste0(path.integ, "Result - Total final energy.xlsx"), sheetName="Emissions by comp")
# xlsx::write.xlsx(as.data.frame(energy.tot.sum), paste0(path.integ, "Result - Total final energy.xlsx"), sheetName="Aggregated ", append=TRUE)
xlsx::write.xlsx(as.data.frame(energy.pcap), paste0(path.integ, "Result - Total final energy per cap.xlsx"), sheetName="GJ/cap by comp")
xlsx::write.xlsx(as.data.frame(energy.pcap.sum), paste0(path.integ, "Result - Total final energy per cap.xlsx"), sheetName="Aggregated ", append=TRUE)
xlsx::write.xlsx(as.data.frame(energy.pcap), paste0(path.integ, "Result - Total final energy per cap.xlsx"), sheetName="GJ.pcap by comp")
xlsx::write.xlsx(as.data.frame(energy.pcap.sum), paste0(path.integ, "Result - Total final energy per cap.xlsx"), sheetName="Aggregated ", append=TRUE)
energy.tot[is.na(energy.tot)] <- 0
energy.tot[is.na(energy.tot)] <- 0
energy.pcap <- energy.tot %>% left_join(ssp.raw %>% select(Country, Year, Pop)) %>%
mutate_at(vars(Housing.R:TV), funs(./Pop*1e9/1e6)) %>% select(-Pop)
energy.pcap.sum <- energy.pcap %>% group_by(Scenario, Country, Type, Year) %>% summarise_at(vars(Housing.R:TV), sum, na.rm=TRUE) %>% ungroup() %>%
mutate(Tot.GJ.pcap = rowSums(.[6:22], na.rm=TRUE))
xlsx::write.xlsx(as.data.frame(energy.tot), paste0(path.integ, "Result - Total final energy.xlsx"), sheetName="Emissions by comp")
xlsx::write.xlsx(as.data.frame(energy.pcap), paste0(path.integ, "Result - Total final energy per cap.xlsx"), sheetName="GJ.pcap by comp")
xlsx::write.xlsx(as.data.frame(energy.pcap.sum), paste0(path.integ, "Result - Total final energy per cap.xlsx"), sheetName="Aggregated ", append=TRUE)
# Save emissions output
xlsx::write.xlsx(as.data.frame(emissions.tot), paste0(path.integ, "Result - Total emissions.xlsx"), sheetName="Emissions by comp")
xlsx::write.xlsx(as.data.frame(emissions.tot.sum), paste0(path.integ, "Result - Total emissions.xlsx"), sheetName="Aggregate", append=TRUE)
xlsx::write.xlsx(as.data.frame(emissions.pcap), paste0(path.integ, "Result - Total emissions per cap.xlsx"), sheetName="Emissions by comp")
xlsx::write.xlsx(as.data.frame(emissions.pcap.sum), paste0(path.integ, "Result - Total emissions per cap.xlsx"), sheetName="Aggregate", append=TRUE)
xlsx::write.xlsx(as.data.frame(energy.pcap), paste0(path.integ, "Result - Total final energy per cap.xlsx"), sheetName="GJ.pcap by comp")
xlsx::write.xlsx(as.data.frame(energy.pcap.sum), paste0(path.integ, "Result - Total final energy per cap.xlsx"), sheetName="Aggregate", append=TRUE)
stock.raw %>% left_join(ssp.raw)
stock.raw %>% left_join(ssp.raw) %>% mutate_if(is.numeric, ./Pop)
stock.raw %>% left_join(ssp.raw) %>% mutate_if(is.numeric, funs(./Pop))
xlsx::write.xlsx(as.data.frame(intensity), paste0(path.integ, "Input - Intensity & Units.xlsx"), sheetName="FE Intensity (TFEI)")
xlsx::write.xlsx(as.data.frame(unit.tot), paste0(path.integ, "Input - Intensity & Units.xlsx"), sheetName="Unit", append=TRUE)
intensity <- intensity.raw %>% left_join(intensity.NR.raw, by=c("Country", "Scenario", "Year", "Type", "Carrier")) %>%
mutate(Fridge=ifelse(is.na(Fridge.y), Fridge.x, Fridge.y), TV=ifelse(is.na(TV.y), TV.x, TV.y)) %>%
select(-ends_with(".x"), -ends_with(".y"))
intensity <- intensity %>% select(Scenario, Country, Type, Year, everything()) %>%
arrange(Scenario, Country, Type, Carrier, Year)
stock <- stock.raw %>% mutate(Type="OP") %>% mutate(Lighting.R=Housing.R, Lighting.U=Housing.U, AC.R=NA, AC.U=NA) %>% select(setdiff(names(intensity), "Carrier"))
build <- build.raw %>% mutate(Type="CON") %>% select(intersect(names(intensity), names(build.raw)))  # Should be in the same order
# Combining stock and build
unit.tot <- stock
unit.tot[,] <- NA
unit.tot[, which(names(stock) %in% names(build))] <- build
unit.tot <- unit.tot %>% rbind(stock) %>% arrange(Scenario, Country, Type, Year)
# Convert JM's components from unit/cap to total unit (million kcal or kg per year)
unit.tot <- unit.tot %>% left_join(ssp.raw) %>% mutate_at(vars(Clothing, Food, Footwear), funs(.*Pop)) %>% # Pop  in millions
select(-(GDP:Urban))
# Lengthen unit.tot
unit.tot <- intensity %>% select(Scenario:Carrier) %>% left_join(unit.tot) %>% select(names(intensity))
energy.calc <- (unit.tot %>% select(-(Scenario:Carrier))) * (intensity %>% select(-(Scenario:Carrier))) %>%
mutate(Mobility=Mobility*1e3) / 1e12 * 1e6 # To EJ (& all other units were in millions except Mobility)
energy.tot <- data.frame(unit.tot %>% select(Scenario:Carrier), energy.calc) %>%
mutate(yrs=Year-lag(Year,1)) %>% mutate(yrs=ifelse(yrs<0, NA, yrs))
energy.tot <- energy.tot %>% filter(Type=="OP") %>%
rbind(energy.tot %>% filter(Type=="CON") %>% mutate_at(vars(Housing.R:TV), funs(./yrs))) %>% select(-yrs)  %>%
arrange(Scenario, Country, Type, Year, Carrier)
energy.tot[is.na(energy.tot)] <- 0
View(energy.tot)
View(energy.pcap)
library(gini)
library(Gini)
?gini
??gini
library(ineq)
rnorm(100)
?rnomr
?rnorm
rlnorm(100)
Gini(rlnorm(100))
Gini(rlnorm(1000))
Gini(rlnorm(100000))
mean(rlnorm(100000))
mean(rlnorm(10000))
mean(rlnorm(1000))
min(rlnorm(1000))
min(rlnorm(10000))
min(rlnorm(1000000))
?rlnorm
