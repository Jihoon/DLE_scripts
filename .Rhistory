View(BRA_intensity)
View(BRA_intensity)
(BRA_intensity)[1:10, 151:164]
View(BRA_fd_exio_pp_BR)
View(cbind(BRA_fd_exio_pp_BR, EX_catnames))
View(cbind(BRA_fd_exio_pp_BR, t(EX_catnames)))
cty_idx <- BRA_idx_ex # IND_idx_ex
cty_idx
cty_idx <- BRA_idx_ex # IND_idx_ex
cty_idx
IND_idx_ex
tot.useE <- data.frame(name = material.name[energy_carrier_use_idx],
TJ=rowSums(materials[energy_carrier_use_idx,cty_idx]) + rowSums(fd_materials[energy_carrier_use_idx,IND_idx_fd]))
tot.useE.sect <- data.frame(material.name[energy_carrier_use_idx],
(materials[energy_carrier_use_idx,cty_idx]), (fd_materials[energy_carrier_use_idx,IND_idx_fd]))
names(tot.useE.sect) <- c("name", EX_catnames, final_demand.name)
view(tot.useE.sect)
View(EX_catnames)
View(t(EX_catnames))
dim(IND_fd_ex)
view(IND_fd_ex)
view(BRA_fd_ex)
BRA_fd_ex <- matrix(final_demand[,BRA_idx_fd[1]], nrow=200)
BRA_fd_exio <- rowSums(BRA_fd_ex) # Sum all HH FD across countries
view(BRA_fd_ex)
wb <- XLConnect::loadWorkbook("H:/MyDocuments/IO work/Bridging/CES-COICOP/ICP_EXIO_Qual_UN_Edited.xlsx")
bridge_ICP_EXIO_q  <- XLConnect::readWorksheet(wb, "ICP_EXIO_Qual_UN2", header=TRUE,
forceConversion=T, endCol=201)
ICP_catnames <- bridge_ICP_EXIO_q[,1]
#####################################################
### Read in (CES-Pseudo COICOP) mappings from WB  ###
#####################################################
### Read in ICP heading number following NTNU 109 mapping (not 100%, some ICP headings are aggregated) ###
Mapping <- system.file("ICP_SEQ.xlsx", package = "XLConnect")
wb <- XLConnect::loadWorkbook("H:/MyDocuments/IO work/Bridging/CES-COICOP/Worldbank/ICP_SEQ.xls")
# I added 'Sheet2' and fixed some mis-categorizations for my needs.
icp_seq <- XLConnect::readWorksheet(wb, sheet="Sheet2", header=TRUE, startRow=2, startCol=1, endCol=1, forceConversion=T)
icp_cat <- XLConnect::readWorksheet(wb, sheet="Sheet2", header=FALSE, startRow=3, startCol=3, endCol=4, forceConversion=T)
NTNU <- XLConnect::readWorksheet(wb, sheet="Sheet2", header=TRUE, startRow=2, startCol=7, endCol=8, forceConversion=T)
icp_ntnu <-cbind(icp_seq, icp_cat, NTNU)
names(icp_ntnu)[2:3] <- c("COICOP1","COICOP2")
names(icp_ntnu)[5] <- "ICP_Heading"
wb <- XLConnect::loadWorkbook("H:/MyDocuments/IO work/Bridging/CES-COICOP/ICP_EXIO_Qual_UN_Edited.xlsx")
bridge_ICP_EXIO_q  <- XLConnect::readWorksheet(wb, "ICP_EXIO_Qual_UN2", header=TRUE,
forceConversion=T, endCol=201)
ICP_catnames <- bridge_ICP_EXIO_q[,1]
attach(BRA_val)
val_BR_BR <- construct_val_mtx(as.matrix(SupBP), as.matrix(TrdMrg), as.matrix(TrpMrg), as.matrix(TotTaxSub))
detach(BRA_val)
# Re-set val_mtx for further analysis
val_mtx <- list(val_FR, val_BR_BR, val_US, val_IN)
names(val_mtx) <- c('FR', 'BR', 'US', 'IN')
BRA_fd_exio_pp_BR <- get_purch_price(BRA_fd_exio, "BR")
scaler_BRA <- sum(BRA_FD_ICP_usd2007[,1]) / sum(BRA_fd_exio_pp_BR)
init_FD_BRA <- BRA_FD_ICP_usd2007[,1] / scaler_BRA
list[BRA_intensity, BRA_alloc, NC_BRA_val_BRA, BRA_FD_adj_val_BRA] <- DeriveIntensities('BRA')
BRA_fd_ex <- read_excel("H:/MyDocuments/IO work/Valuation/BR_output.xls", sheet="usebptot", skip=14, col_names=FALSE)
BRA_fd_exio <- as.matrix(BRA_fd_ex[1:200,169])
BRA_fd_exio[174] <- 15600  # M Euro
BRA_fd_exio <- BRA_fd_exio / EXR_EUR$r  # to M.USD 2007
attach(BRA_val)
val_BR_BR <- construct_val_mtx(as.matrix(SupBP), as.matrix(TrdMrg), as.matrix(TrpMrg), as.matrix(TotTaxSub))
detach(BRA_val)
# Re-set val_mtx for further analysis
val_mtx <- list(val_FR, val_BR_BR, val_US, val_IN)
names(val_mtx) <- c('FR', 'BR', 'US', 'IN')
BRA_fd_exio_pp_BR <- get_purch_price(BRA_fd_exio, "BR")
scaler_BRA <- sum(BRA_FD_ICP_usd2007[,1]) / sum(BRA_fd_exio_pp_BR)
init_FD_BRA <- BRA_FD_ICP_usd2007[,1] / scaler_BRA
list[BRA_intensity, BRA_alloc, NC_BRA_val_BRA, BRA_FD_adj_val_BRA] <- DeriveIntensities('BRA')
BRA_intensity[1:10, 151:164]
save(BRA_intensity, file="./Saved tables/BRA_intensities_val_BRA_rev.Rda")
getwd()
# BRA_FD_ALL
load(file="H:/MyDocuments/IO work/DLE_scripts/Saved tables/BRA_AllHHConsump.Rda")
# BRA_HH
load(file="H:/MyDocuments/IO work/DLE_scripts/Saved tables/BRA_HH.Rda")
# BRA_FD_ICP_AllHH
load(file="H:/MyDocuments/IO work/DLE_scripts/Saved tables/BRA_FD_harmonized.Rda")
# IND_FD_ALL
load(file="H:/MyDocuments/IO work/DLE_scripts/Saved tables/IND_AllHHConsump.Rda")
# IND_HH
load(file="H:/MyDocuments/IO work/DLE_scripts/Saved tables/IND_HH.Rda")
# IND_FD_ICP_AllHH
load(file="H:/MyDocuments/IO work/DLE_scripts/Saved tables/IND_FD_harmonized.Rda")
load( file="./Saved tables/BRA_alloc_val_BRA.Rda")
load( file="./Saved tables/IND_alloc.Rda")
dj_val_EXIO: Adjusted by rIPFP based on EXIO default valuation mtx
# Brazil
chng_pct_val_BRA <- (BRA_FD_adj_val_BRA - init_FD_BRA) / init_FD_BRA
chng_pct_val_BRA[is.nan(chng_pct_val_BRA)] <- 0
chng_pct_val_EXIO <- (BRA_FD_adj_val_EXIO - init_FD_BRA) / init_FD_BRA
chng_pct_val_EXIO[is.nan(chng_pct_val_EXIO)] <- 0
BRA_FD_ICP_HH_adj_BR <- BRA_FD_ICP_AllHH * (chng_pct_val_BRA + 1)
BRA_FD_ICP_HH_adj_EX <- BRA_FD_ICP_AllHH * (chng_pct_val_EXIO + 1)
# And two vectors for India
# init_FD_IND: Initial vector from the survey (scaled to M.USD 2007 MER)
# IND_FD_adj: Adjusted by rIPFP based on EXIO default valuation mtx
# India
chng_pct_IND <- (IND_FD_adj - init_FD_IND) / init_FD_IND
chng_pct_IND[is.nan(chng_pct_IND)] <- 0
IND_FD_ICP_HH_adj <- IND_FD_ICP_AllHH * (chng_pct_IND + 1)
# When there is an adjustment frmo 0 to non-zero values, we need to assign the non-zero values to all HH.
# I do it proportionately to match the weighted sum.
idx_inf <- which(is.infinite(chng_pct_IND))  # Identify rows with Inf adjustments
r_HH <- colSums(IND_FD_ICP_AllHH)/sum(IND_FD_ICP_AllHH)  # ratio of hh total to (unweighted) total
IND_FD_ICP_HH_adj[idx_inf,] <- t(sapply(IND_FD_adj[idx_inf] * 1e6, # M.USD to USD
function(x) x * r_HH / sum(r_HH * IND_HH$weight))) * scaler_IND
rm(r_HH)
gc()
# scaler_IN
load( file="./Saved tables/BRA_FD_adj_val_BRA.Rda")
chng_pct_val_BRA <- (BRA_FD_adj_val_BRA - init_FD_BRA) / init_FD_BRA
chng_pct_val_BRA[is.nan(chng_pct_val_BRA)] <- 0
chng_pct_val_EXIO <- (BRA_FD_adj_val_EXIO - init_FD_BRA) / init_FD_BRA
chng_pct_val_EXIO[is.nan(chng_pct_val_EXIO)] <- 0
#################
### Constants ###
#################
### EXIO country order ###
exio_ctys <- c("AT", "BE", "BG", "CY", "CZ", "DE", "DK", "EE", "ES", "FI",
"FR", "GR", "HU", "IE", "IT", "LT", "LU", "LV", "MT", "NL",
"PL", "PT", "RO", "SE", "SI", "SK", "GB", "US", "JP", "CN",
"CA", "KR", "BR", "IN", "MX", "RU", "AU", "CH", "TR", "TW",
"NO", "ID", "ZA", "WA", "WL", "WE", "WF", "WM")
n_draw <- 1000
D_val_uncertainty <- 0  # or 1 : Whether to include uncertainty analysis for valuation mtx - margins and tax rates
draw_count <- 1
options(digits=3)
# DLE DB in PPP 2010$ (PPP in terms of private consumption)
# EXIO in MER 2007
# Need this PPP rate to go back to local currency in 2010
# [LCU/$]
PPP_cty = WDI(country = c("IN", "BR"), indicator = c("PA.NUS.PPP", "PA.NUS.PRVT.PP"), start = 2010, end = 2010, extra = FALSE, cache = NULL)
PPP_IND <- as.numeric(PPP_cty %>% filter(country=="India") %>% select(PA.NUS.PRVT.PP) )
PPP_BRA <- as.numeric(PPP_cty %>% filter(country=="Brazil") %>% select(PA.NUS.PRVT.PP) )
# Inflation
# Deflate currency in 2010 to 2007 (EXIO)
CPI <- WDI(country = c("IN", "BR", "FR"), indicator = "FP.CPI.TOTL", start = 2007, end = 2010, extra = FALSE, cache = NULL)
CPI_ratio_IND <- as.numeric(CPI %>% filter(year==2010 & iso2c=='IN') %>% select(FP.CPI.TOTL) / CPI %>% filter(year==2007 & iso2c=='IN') %>% select(FP.CPI.TOTL))
CPI_ratio_BRA <- as.numeric(CPI %>% filter(year==2010 & iso2c=='BR') %>% select(FP.CPI.TOTL) / CPI %>% filter(year==2007 & iso2c=='BR') %>% select(FP.CPI.TOTL))
# Exchange rate (MER) [LCU/$]
EXR_EUR <- WDI(country = "XC", indicator = "PA.NUS.FCRF", start = 2007, end = 2007, extra = FALSE, cache = NULL)
EXR_EUR <- EXR_EUR %>% rename(r=PA.NUS.FCRF)
EXR_cty <- WDI(country = c("IN", "BR"), indicator = "PA.NUS.FCRF", start = 2007, end = 2007, extra = FALSE, cache = NULL)
EXR_IND <- as.numeric(EXR_cty %>% filter(country=="India") %>% select(PA.NUS.FCRF))
EXR_BRA <- as.numeric(EXR_cty %>% filter(country=="Brazil") %>% select(PA.NUS.FCRF))
# HH Consumption in India 2007 [US$]
HH_CON <- WDI(country = c("IN", "BR"), indicator = c("NE.CON.PETC.CD", "NE.CON.PRVT.CD", "NE.CON.PETC.CN", "NE.CON.PRVT.KD"),
start = 2004, end = 2011, extra = FALSE, cache = NULL)
BRA_con_grwth <- as.numeric(HH_CON %>% filter(year==2008 & iso2c=='BR') %>% select(NE.CON.PRVT.KD) /
HH_CON %>% filter(year==2007 & iso2c=='BR') %>% select(NE.CON.PRVT.KD))
IND_con_grwth <- as.numeric(HH_CON %>% filter(year==2011 & iso2c=='IN') %>% select(NE.CON.PRVT.KD) /
HH_CON %>% filter(year==2007 & iso2c=='IN') %>% select(NE.CON.PRVT.KD))
IND2_con_grwth <- as.numeric(HH_CON %>% filter(year==2004 & iso2c=='IN') %>% select(NE.CON.PRVT.KD) /
HH_CON %>% filter(year==2007 & iso2c=='IN') %>% select(NE.CON.PRVT.KD))
WDI(country = c("IN", "BR"), indicator = c("NE.IMP.GNFS.ZS", "NE.EXP.GNFS.ZS"), start = 2007, end = 2007, extra = FALSE, cache = NULL)
##############################################
###        Read in EXIO matrices           ###
##############################################
# Takes long time to run.
# Some .Rda files are already created to save time.
# source("EXIO_init.R")
#########################################
### Get EXIO FD vectors for countries ###
#########################################
# Get IND final demand from EXIO [M.EUR to M.USD]
IND_place <- which(exio_ctys=="IN")
IND_idx_fd <- seq(7*(IND_place-1)+1, 7*IND_place)   # 7 final demand columns per country
IND_idx_ex <- seq(200*(IND_place-1)+1, 200*IND_place)   # 7 final demand columns per country
IND_fd_ex <- matrix(final_demand[,IND_idx_fd[1]], nrow=200) / EXR_EUR$r  # to M.USD (2007 MER)
IND_fd_exio <- rowSums(IND_fd_ex) # Sum all HH FD across countries
IND_fd_exio_imp <- rowSums(IND_fd_ex[,-IND_place]) # Sum all HH FD across countries
# Get BRA final demand from EXIO [M.EUR to M.USD]
BRA_place <- which(exio_ctys=="BR")
BRA_idx_fd <- seq(7*(BRA_place-1)+1, 7*BRA_place)   # 7 final demand columns per country
BRA_idx_ex <- seq(200*(BRA_place-1)+1, 200*BRA_place)   # 7 final demand columns per country
# Issue: This 'final_demand' for BRA gives too small values for electricity expenditure.
# Instead I can use the column from 'BR_output.xls' file.
# BRA_fd_ex <- matrix(final_demand[,BRA_idx_fd[1]], nrow=200)
# BRA_fd_exio <- rowSums(BRA_fd_ex) # Sum all HH FD across countries
# BRA_fd_exio_imp <- rowSums(BRA_fd_ex[,-BRA_place]) # Sum all HH FD across countries
BRA_fd_ex <- read_excel("H:/MyDocuments/IO work/Valuation/BR_output.xls", sheet="usebptot", skip=14, col_names=FALSE)
# Issue: Brazil FD has zero education expediture. (reasons unknown)
# Simply replace the zero with the values found on actual BRA IO
BRA_fd_exio <- as.matrix(BRA_fd_ex[1:200,169])
BRA_fd_exio[174] <- 15600  # M Euro
BRA_fd_exio <- BRA_fd_exio / EXR_EUR$r  # to M.USD 2007
# The value 15600 is from H:\MyDocuments\IO work\Bridging\CES-COICOP\BRA IO FD comparison.xlsx
final_demand <- read.table(paste(path_iot, "mrFinalDemand_version2.2.2.txt", sep=""), header=FALSE, sep="\t", dec=".", skip=2)
final_demand.name <- read.table(paste(path_iot, "mrFinalDemand_version2.2.2.txt", sep=""),
header=FALSE, sep="\t", dec=".", skip=1, nrow=1,  stringsAsFactors=FALSE)[4:10]
final_demand <- final_demand[,c(-1,-2,-3)]
# Get IND final demand from EXIO [M.EUR to M.USD]
IND_place <- which(exio_ctys=="IN")
IND_idx_fd <- seq(7*(IND_place-1)+1, 7*IND_place)   # 7 final demand columns per country
IND_idx_ex <- seq(200*(IND_place-1)+1, 200*IND_place)   # 7 final demand columns per country
IND_fd_ex <- matrix(final_demand[,IND_idx_fd[1]], nrow=200) / EXR_EUR$r  # to M.USD (2007 MER)
IND_fd_exio <- rowSums(IND_fd_ex) # Sum all HH FD across countries
IND_fd_exio_imp <- rowSums(IND_fd_ex[,-IND_place]) # Sum all HH FD across countries
# Get BRA final demand from EXIO [M.EUR to M.USD]
BRA_place <- which(exio_ctys=="BR")
BRA_idx_fd <- seq(7*(BRA_place-1)+1, 7*BRA_place)   # 7 final demand columns per country
BRA_idx_ex <- seq(200*(BRA_place-1)+1, 200*BRA_place)   # 7 final demand columns per country
# Issue: This 'final_demand' for BRA gives too small values for electricity expenditure.
# Instead I can use the column from 'BR_output.xls' file.
# BRA_fd_ex <- matrix(final_demand[,BRA_idx_fd[1]], nrow=200)
# BRA_fd_exio <- rowSums(BRA_fd_ex) # Sum all HH FD across countries
# BRA_fd_exio_imp <- rowSums(BRA_fd_ex[,-BRA_place]) # Sum all HH FD across countries
BRA_fd_ex <- read_excel("H:/MyDocuments/IO work/Valuation/BR_output.xls", sheet="usebptot", skip=14, col_names=FALSE)
# Issue: Brazil FD has zero education expediture. (reasons unknown)
# Simply replace the zero with the values found on actual BRA IO
BRA_fd_exio <- as.matrix(BRA_fd_ex[1:200,169])
BRA_fd_exio[174] <- 15600  # M Euro
BRA_fd_exio <- BRA_fd_exio / EXR_EUR$r  # to M.USD 2007
# The value 15600 is from H:\MyDocuments\IO work\Bridging\CES-COICOP\BRA IO FD comparison.xlsx
#########################################
### Read in COICOP-EXIO Qual mapping  ###
#########################################
# Issue: This is to be replaced by 'bridge_ICP_EXIO_q' (currently in Map_CES_COICOP.R).
#       But bridge_COICOP_EXIO_q is used as a base for contructing bridge_ICP_EXIO_q.
#       I will move the scripts here (or call from here) once it is being used
n_sector_coicop <- 109
# Mapping <- system.file("COICOP3_EXIO_bridge.xlsx", package = "XLConnect")
# wb <- XLConnect::loadWorkbook("H:/MyDocuments/IO work/Uncertainty/COICOP3_EXIO_bridge.xlsx")
wb <- XLConnect::loadWorkbook("H:/MyDocuments/IO work/Bridging/CES-COICOP/COICOIP_EXIO_Qual_UN_Edited.xlsx")
# Qualitative mapping (0 or 1)
# bridge_COICOP_EXIO_q <- XLConnect::readWorksheet(wb, sheet="Qual_DK+FR", header=FALSE,
#                                                  startRow=3, endRow=2+n_sector_coicop, startCol=2, forceConversion=T)
bridge_COICOP_EXIO_q <- XLConnect::readWorksheet(wb, sheet="COICOIP_EXIO_Qual_UN", header=FALSE,
startRow=2, endRow=1+n_sector_coicop, startCol=1, endCol= 201, forceConversion=T)
# Compare Gibran's updated qual mapping
# wb <- XLConnect::loadWorkbook("C:/Users/min/Dropbox/HH environmental consumption/NTNU/product classification/COICOP3_EXIO_bridge.xlsx")
# bridge_ntnu <- XLConnect::readWorksheet(wb, sheet="qualitative 0_1", header=FALSE,
#                                                  startRow=3, endRow=2+n_sector_coicop, startCol=3, forceConversion=T)
# Final COICOP classification with 109 headings
COICOP_catnames2 <- XLConnect::readWorksheet(wb, sheet="COICOIP_EXIO_Qual_UN", header=FALSE, startRow=2, endRow=1+n_sector_coicop, startCol=1, endCol=1)
EX_catnames <- XLConnect::readWorksheet(wb, sheet="COICOIP_EXIO_Qual_UN", header=FALSE, startRow=1, endRow=1, startCol=2)
# Issue: This qual mapping may change depending on countries, which we need to tackle then.
#####################################################
###     Treating CES fuel sectors differently     ###
#####################################################
wb <- XLConnect::loadWorkbook("H:/MyDocuments/IO work/Bridging/CES-COICOP/CES_fuel_EXIO.xlsx")
bridge_fuel_EXIO_q  <- XLConnect::readWorksheet(wb, "Sheet1", header=TRUE, forceConversion=T,
startRow=2, startCol=3, endCol=202)
DLE_fuel_sector_Q  <- XLConnect::readWorksheet(wb, "Sheet2", header=TRUE, forceConversion=T,
startRow=2, startCol=3)
DLE_fuelnames_std  <- XLConnect::readWorksheet(wb, "Sheet1", header=TRUE, forceConversion=T,
startRow=2, startCol=2, endCol=2)
DLE_fuel_sector_Q[is.na(DLE_fuel_sector_Q)] <- 0
bridge_fuel_EXIO_q[is.na(bridge_fuel_EXIO_q)] <- 0
names(bridge_fuel_EXIO_q) <- EX_catnames
row.names(bridge_fuel_EXIO_q) <- DLE_fuelnames_std[,1]
names(DLE_fuelnames_std) <- "item"
source("P:/ene.general/DecentLivingEnergy/Surveys/Generic function to access database.R")
IND_FD <- readFinalDemandfromDBbyDecile('IND1')
source("Read_final_demand_from_DB.R")
source("Read_direct_energy_from_DB.R")
DLE_fuel_types <- ConstructyFuelTypeSet() %>% arrange(fuel)
IND_FD <- readFinalDemandfromDBbyDecile('IND1')
BRA_FD <- readFinalDemandfromDBbyDecile('BRA0')
# Remove tax observations from DB
IND_FD_code <- IND_FD[-grep("taxes", IND_FD$item, ignore.case = TRUE), ]
# Merge sector code info
IND_FD_code <- merge(IND_FD_code[1:(dim(IND_FD_code)[1]-n_CES_fuel),], IND_map %>% select(CODE, item=ITEM_DLE),
by="item", all.x = TRUE) %>% arrange(CODE) %>%
rbind(IND_FD[-(1:(dim(IND_FD)[1]-n_CES_fuel)),]%>% mutate(CODE=999))    # Fuels are temprarily assigned to 999. (not used)
# Replace NAs with zeros
IND_FD_code[is.na(IND_FD_code)] <- 0
#################################
source("Generate_base_ICP-EXIO_mapping.R")
n_sector_icp <- 151  # Num of ICP sectors
n_sector_icp_fuel <- n_sector_icp + dim(DLE_fuelnames_std)[1]
source("Map_CES_COICOP.R")
wb <- XLConnect::loadWorkbook("H:/MyDocuments/IO work/Bridging/CES-COICOP/ICP_EXIO_Qual_UN_Edited.xlsx")
bridge_ICP_EXIO_q  <- XLConnect::readWorksheet(wb, "ICP_EXIO_Qual_UN2", header=TRUE,
forceConversion=T, endCol=201)
ICP_catnames <- bridge_ICP_EXIO_q[,1]
n_CES_fuel <- dim(DLE_fuel_sector_Q)[2]
#############################
### 1.1.1. IND1 by decile ###
#############################
# Remove tax observations from DB
IND_FD_code <- IND_FD[-grep("taxes", IND_FD$item, ignore.case = TRUE), ]
# Merge sector code info
IND_FD_code <- merge(IND_FD_code[1:(dim(IND_FD_code)[1]-n_CES_fuel),], IND_map %>% select(CODE, item=ITEM_DLE),
by="item", all.x = TRUE) %>% arrange(CODE) %>%
rbind(IND_FD[-(1:(dim(IND_FD)[1]-n_CES_fuel)),]%>% mutate(CODE=999))    # Fuels are temprarily assigned to 999. (not used)
# Replace NAs with zeros
IND_FD_code[is.na(IND_FD_code)] <- 0
IND_FD_ICP_usd2011 <- IND_FD_ICP * PPP_IND / CPI_ratio_IND / EXR_IND / 1e6 # to M.USD 2007 (MER)
IND_FD_ICP <- t(CES_ICP_IND) %*% as.matrix(IND_FD_code[1:(dim(IND_FD_code)[1]-n_CES_fuel),2:12]) %>%
rbind(IND_FD_code[-(1:(dim(IND_FD_code)[1]-n_CES_fuel)),2:12]) # for all deciles and total
IND_FD_ICP <- as.matrix(IND_FD_ICP)
# Total final demand in ICP cat for all HH
IND_FD_ICP <- t(CES_ICP_IND) %*% as.matrix(IND_FD_code[1:(dim(IND_FD_code)[1]-n_CES_fuel),2:12]) %>%
rbind(IND_FD_code[-(1:(dim(IND_FD_code)[1]-n_CES_fuel)),2:12]) # for all deciles and total
source("Map_CES_COICOP.R")
source('H:/MyDocuments/IO work/DLE_scripts/Map_CES_COICOP.R', echo=TRUE)
#####################################################
### Read in (CES-Pseudo COICOP) mappings from WB  ###
#####################################################
### Read in ICP heading number following NTNU 109 mapping (not 100%, some ICP headings are aggregated) ###
Mapping <- system.file("ICP_SEQ.xlsx", package = "XLConnect")
wb <- XLConnect::loadWorkbook("H:/MyDocuments/IO work/Bridging/CES-COICOP/Worldbank/ICP_SEQ.xls")
# I added 'Sheet2' and fixed some mis-categorizations for my needs.
icp_seq <- XLConnect::readWorksheet(wb, sheet="Sheet2", header=TRUE, startRow=2, startCol=1, endCol=1, forceConversion=T)
icp_cat <- XLConnect::readWorksheet(wb, sheet="Sheet2", header=FALSE, startRow=3, startCol=3, endCol=4, forceConversion=T)
NTNU <- XLConnect::readWorksheet(wb, sheet="Sheet2", header=TRUE, startRow=2, startCol=7, endCol=8, forceConversion=T)
icp_ntnu <-cbind(icp_seq, icp_cat, NTNU)
names(icp_ntnu)[2:3] <- c("COICOP1","COICOP2")
names(icp_ntnu)[5] <- "ICP_Heading"
source("Process_WB.R")  # Read in the function 'processWBscript' and resulting mtxs for 4 countries
# Issue: I still need to match with our CES DB and final NTNU 109 classification
#        How to combine fuel consumption and other (food etc)
#       -> We decided to follow ICP headings from the WB and bridge this ICP classification to EXIO.
source("Map_CES_COICOP.R")
# Need to separatly handle the fuel rows  (in USD PPP 2010)
# Fianlly get 164 harmonized ICP rows for all
IND_FD_ICP <- t(CES_ICP_IND) %*% as.matrix(IND_FD_code[1:(dim(IND_FD_code)[1]-n_CES_fuel),2:12]) %>%
rbind(IND_FD_code[-(1:(dim(IND_FD_code)[1]-n_CES_fuel)),2:12]) # for all deciles and total
IND_FD_ICP <- as.matrix(IND_FD_ICP)
# Total final demand in ICP cat for all HH (not scaled up to Nat Acc level yet) (USD 2010 PPP as in DLE DB)
load(file="H:/MyDocuments/IO work/DLE_scripts/Saved tables/IND_AllHH_w_CODE.Rda")
IND_FD_ICP_AllHH <- crossprod(CES_ICP_IND, as.matrix(IND_FD_ALL[1:(dim(IND_FD_ALL)[1]-n_CES_fuel),-c(1,2), with=FALSE])) %>%
rbind(as.matrix(IND_FD_ALL[-(1:(dim(IND_FD_ALL)[1]-n_CES_fuel)),-c(1,2) , with=FALSE]))
# IND_FD_ALL
load(file="H:/MyDocuments/IO work/DLE_scripts/Saved tables/IND_AllHHConsump.Rda")
# IND_HH
load(file="H:/MyDocuments/IO work/DLE_scripts/Saved tables/IND_HH.Rda")
# IND_FD_ICP_AllHH
load(file="H:/MyDocuments/IO work/DLE_scripts/Saved tables/IND_FD_harmonized.Rda")
# Deciles
IND_FD_ICP_usd2011 <- IND_FD_ICP * PPP_IND / CPI_ratio_IND / EXR_IND / 1e6 # to M.USD 2007 (MER)
IND_FD_ICP_usd2007 <- IND_FD_ICP_usd2011 / IND_con_grwth
# IND_FD_ICP_usd2007 <- IND_FD_ICP_usd2011 / ((consumption_growth^4)[c(as.numeric(icp_ntnu$COICOP1)[1:151],rep(4,n_CES_fuel)),])
# This scaling by consump
# BRA1 is for 2008-2009
BRA_FD <- data.frame(item=ICP_catnames) %>% left_join(BRA_FD)  # Join to make items consistent with the standardized names and order
BRA_FD[is.na(BRA_FD)] <- 0
BRA_FD_ICP_usd2007 <- as.matrix(BRA_FD[,2:12] * PPP_BRA / CPI_ratio_BRA / EXR_BRA / 1e6 / BRA_con_grwth) # to M.USD 2007
# BRA1_FD_IC
# Brazil
chng_pct_val_BRA <- (BRA_FD_adj_val_BRA - init_FD_BRA) / init_FD_BRA
chng_pct_val_BRA[is.nan(chng_pct_val_BRA)] <- 0
chng_pct_val_EXIO <- (BRA_FD_adj_val_EXIO - init_FD_BRA) / init_FD_BRA
chng_pct_val_EXIO[is.nan(chng_pct_val_EXIO)] <- 0
BRA_FD_ICP_HH_adj_BR <- BRA_FD_ICP_AllHH * (chng_pct_val_BRA + 1)
BRA_FD_ICP_HH_adj_EX <- BRA_FD_ICP_AllHH * (chng_pct_val_EXIO + 1)
scaler_IND <- sum(IND_FD_ICP_usd2007[,1]) / sum(get_purch_price(IND_fd_exio, "IN"))
# scaler2_IND <- sum(IND2_FD_ICP_usd2007[,1]) / sum(get_purch_price(IND2_fd_exio, "IN"))
scaler_IND2 <- scaler_IND
init_FD_IND <- IND_FD_ICP_usd2007[,1] / scaler_IND
scaler_BRA <- sum(BRA_FD_ICP_usd2007[,1]) / sum(get_purch_price(BRA_fd_exio, "BR"))
init_FD_BRA <- BRA_FD_ICP_usd2007[,1] / scaler_BRA
# Deciles
IND_FD_ICP_usd2011 <- IND_FD_ICP * PPP_IND / CPI_ratio_IND / EXR_IND / 1e6 # to M.USD 2007 (MER)
IND_FD_ICP_usd2007 <- IND_FD_ICP_usd2011 / IND_con_grwth
# IND_FD_ICP_usd2007 <- IND_FD_ICP_usd2011 / ((consumption_growth^4)[c(as.numeric(icp_ntnu$COICOP1)[1:151],rep(4,n_CES_fuel)),])
# This scaling by consumption_g
# BRA1 is for 2008-2009
BRA_FD <- data.frame(item=ICP_catnames) %>% left_join(BRA_FD)  # Join to make items consistent with the standardized names and order
BRA_FD[is.na(BRA_FD)] <- 0
BRA_FD_ICP_usd2007 <- as.matrix(BRA_FD[,2:12] * PPP_BRA / CPI_ratio_BRA / EXR_BRA / 1e6 / BRA_con_grwth) # to M.USD 2007
# BRA1_FD_ICP_usd2007 <- cbind(BR
scaler_IND <- sum(IND_FD_ICP_usd2007[,1]) / sum(get_purch_price(IND_fd_exio, "IN"))
source('H:/MyDocuments/IO work/DLE_scripts/Valuation.R', echo=TRUE)
# Set Scalers
scaler_IND <- sum(IND_FD_ICP_usd2007[,1]) / sum(get_purch_price(IND_fd_exio, "IN"))
# scaler2_IND <- sum(IND2_FD_ICP_usd2007[,1]) / sum(get_purch_price(IND2_fd_exio, "IN"))
scaler_IND2 <- scaler_IND
init_FD_IND <- IND_FD_ICP_usd2007[,1] / scaler_IND
scaler_BRA <- sum(BRA_FD_ICP_usd2007[,1]) / sum(get_purch_price(BRA_fd_exio, "BR"))
init_FD_BRA <- BRA_FD_ICP_usd2007[,1] / scaler_BRA
final_demand <- read.table(paste(path_iot, "mrFinalDemand_version2.2.2.txt", sep=""), header=FALSE, sep="\t", dec=".", skip=2)
final_demand.name <- read.table(paste(path_iot, "mrFinalDemand_version2.2.2.txt", sep=""),
header=FALSE, sep="\t", dec=".", skip=1, nrow=1,  stringsAsFactors=FALSE)[4:10]
final_demand <- final_demand[,c(-1,-2,-3)]
path_iot <- "P:/ene.general/DecentLivingEnergy/IO/Data - EXIOBASE/mrIOT_PxP_ita_coefficient_version2.2.2/"
path_sut <- "P:/ene.general/DecentLivingEnergy/IO/Data - EXIOBASE/mrSUT_version2.2.2/"
final_demand <- read.table(paste(path_iot, "mrFinalDemand_version2.2.2.txt", sep=""), header=FALSE, sep="\t", dec=".", skip=2)
final_demand.name <- read.table(paste(path_iot, "mrFinalDemand_version2.2.2.txt", sep=""),
header=FALSE, sep="\t", dec=".", skip=1, nrow=1,  stringsAsFactors=FALSE)[4:10]
final_demand <- final_demand[,c(-1,-2,-3)]
# Set Scalers
scaler_IND <- sum(IND_FD_ICP_usd2007[,1]) / sum(get_purch_price(IND_fd_exio, "IN"))
# scaler2_IND <- sum(IND2_FD_ICP_usd2007[,1]) / sum(get_purch_price(IND2_fd_exio, "IN"))
scaler_IND2 <- scaler_IND
init_FD_IND <- IND_FD_ICP_usd2007[,1] / scaler_IND
scaler_BRA <- sum(BRA_FD_ICP_usd2007[,1]) / sum(get_purch_price(BRA_fd_exio, "BR"))
init_FD_BRA <- BRA_FD_ICP_usd2007[,1] / scaler_BRA
source('H:/MyDocuments/IO work/DLE_scripts/Valuation.R', echo=TRUE)
# Set Scalers
scaler_IND <- sum(IND_FD_ICP_usd2007[,1]) / sum(get_purch_price(IND_fd_exio, "IN"))
# scaler2_IND <- sum(IND2_FD_ICP_usd2007[,1]) / sum(get_purch_price(IND2_fd_exio, "IN"))
scaler_IND2 <- scaler_IND
init_FD_IND <- IND_FD_ICP_usd2007[,1] / scaler_IND
scaler_BRA <- sum(BRA_FD_ICP_usd2007[,1]) / sum(get_purch_price(BRA_fd_exio, "BR"))
init_FD_BRA <- BRA_FD_ICP_usd2007[,1] / scaler_BRA
#########################################
### Get EXIO FD vectors for countries ###
#########################################
# Get IND final demand from EXIO [M.EUR to M.USD]
IND_place <- which(exio_ctys=="IN")
IND_idx_fd <- seq(7*(IND_place-1)+1, 7*IND_place)   # 7 final demand columns per country
IND_idx_ex <- seq(200*(IND_place-1)+1, 200*IND_place)   # 7 final demand columns per country
IND_fd_ex <- matrix(final_demand[,IND_idx_fd[1]], nrow=200) / EXR_EUR$r  # to M.USD (2007 MER)
IND_fd_exio <- rowSums(IND_fd_ex) # Sum all HH FD across countries
IND_fd_exio_imp <- rowSums(IND_fd_ex[,-IND_place]) # Sum all HH FD across countries
# Get BRA final demand from EXIO [M.EUR to M.USD]
BRA_place <- which(exio_ctys=="BR")
BRA_idx_fd <- seq(7*(BRA_place-1)+1, 7*BRA_place)   # 7 final demand columns per country
BRA_idx_ex <- seq(200*(BRA_place-1)+1, 200*BRA_place)   # 7 final demand columns per country
# Issue: This 'final_demand' for BRA gives too small values for electricity expenditure.
# Instead I can use the column from 'BR_output.xls' file.
# BRA_fd_ex <- matrix(final_demand[,BRA_idx_fd[1]], nrow=200)
# BRA_fd_exio <- rowSums(BRA_fd_ex) # Sum all HH FD across countries
# BRA_fd_exio_imp <- rowSums(BRA_fd_ex[,-BRA_place]) # Sum all HH FD across countries
BRA_fd_ex <- read_excel("H:/MyDocuments/IO work/Valuation/BR_output.xls", sheet="usebptot", skip=14, col_names=FALSE)
# Issue: Brazil FD has zero education expediture. (reasons unknown)
# Simply replace the zero with the values found on actual BRA IO
BRA_fd_exio <- as.matrix(BRA_fd_ex[1:200,169])
BRA_fd_exio[174] <- 15600  # M Euro
BRA_fd_exio <- BRA_fd_exio / EXR_EUR$r  # to M.USD 2007
# The value 15600 is from H:\MyDocuments\IO work\Bridging\CES-COICOP\BRA IO FD comparison.xlsx
# Set Scalers
scaler_IND <- sum(IND_FD_ICP_usd2007[,1]) / sum(get_purch_price(IND_fd_exio, "IN"))
# scaler2_IND <- sum(IND2_FD_ICP_usd2007[,1]) / sum(get_purch_price(IND2_fd_exio, "IN"))
scaler_IND2 <- scaler_IND
init_FD_IND <- IND_FD_ICP_usd2007[,1] / scaler_IND
scaler_BRA <- sum(BRA_FD_ICP_usd2007[,1]) / sum(get_purch_price(BRA_fd_exio, "BR"))
init_FD_BRA <- BRA_FD_ICP_usd2007[,1] / scaler_BRA
# Brazil
chng_pct_val_BRA <- (BRA_FD_adj_val_BRA - init_FD_BRA) / init_FD_BRA
chng_pct_val_BRA[is.nan(chng_pct_val_BRA)] <- 0
chng_pct_val_EXIO <- (BRA_FD_adj_val_EXIO - init_FD_BRA) / init_FD_BRA
chng_pct_val_EXIO[is.nan(chng_pct_val_EXIO)] <- 0
BRA_FD_ICP_HH_adj_BR <- BRA_FD_ICP_AllHH * (chng_pct_val_BRA + 1)
BRA_FD_ICP_HH_adj_EX <- BRA_FD_ICP_AllHH * (chng_pct_val_EXIO + 1)
chng_pct_IND <- (IND_FD_adj - init_FD_IND) / init_FD_IND
chng_pct_IND[is.nan(chng_pct_IND)] <- 0
IND_FD_ICP_HH_adj <- IND_FD_ICP_AllHH * (chng_pct_IND + 1)
# When there is an adjustment frmo 0 to non-zero values, we need to assign the non-zero values to all HH.
# I do it proportionately to match the weighted sum.
idx_inf <- which(is.infinite(chng_pct_IND))  # Identify rows with Inf adjustments
r_HH <- colSums(IND_FD_ICP_AllHH)/sum(IND_FD_ICP_AllHH)  # ratio of hh total to (unweighted) total
IND_FD_ICP_HH_adj[idx_inf,] <- t(sapply(IND_FD_adj[idx_inf] * 1e6, # M.USD to USD
function(x) x * r_HH / sum(r_HH * IND_HH$weight))) * scaler_IND
rm(r_HH)
gc()
# scaler_IND needed since IND_FD_ICP_HH_adj is not scaled to match fd_exio
n_draw <- 50
D_val_uncertainty <- 0
IND_fd_exio_pp <- get_purch_price(IND_fd_exio, "IN")
scaler_IND <- sum(IND_FD_ICP_usd2007[,1]) / sum(IND_fd_exio_pp)
init_FD_IND <- IND_FD_ICP_usd2007[,1] / scaler_IND
list[IND_intensity, IND_alloc, NC_IND, IND_FD_adj] <- DeriveIntensities('IND')
source('H:/MyDocuments/IO work/DLE_scripts/Functions_for_intensity_analysis.R', echo=TRUE)
IND_fd_exio_pp <- get_purch_price(IND_fd_exio, "IN")
scaler_IND <- sum(IND_FD_ICP_usd2007[,1]) / sum(IND_fd_exio_pp)
init_FD_IND <- IND_FD_ICP_usd2007[,1] / scaler_IND
list[IND_intensity, IND_alloc, NC_IND, IND_FD_adj] <- DeriveIntensities('IND')
source('H:/MyDocuments/IO work/DLE_scripts/Bridge_RAS.R', echo=TRUE)
source('H:/MyDocuments/IO work/DLE_scripts/Bridging_uncertainty.R', echo=TRUE)
IND_fd_exio_pp <- get_purch_price(IND_fd_exio, "IN")
scaler_IND <- sum(IND_FD_ICP_usd2007[,1]) / sum(IND_fd_exio_pp)
init_FD_IND <- IND_FD_ICP_usd2007[,1] / scaler_IND
list[IND_intensity, IND_alloc, NC_IND, IND_FD_adj] <- DeriveIntensities('IND')
fd_materials <- read.table(paste(path_iot, "mrFDMaterials_version2.2.0.txt", sep=""), header=FALSE, sep="\t", dec=".", skip=2)
fd_materials <- fd_materials[,c(-1,-2)]
# Material extension with more energy carrier resolution from NTNU (ver 2.2.0)
# However these extensions are in TJ unit, which need to be divided by total use by product to get intensities.
materials <- read.table(paste(path_iot, "mrMaterials_version2.2.0.txt", sep=""), header=FALSE, sep="\t", dec=".", skip=2)
material.name <- materials[,1]
materials <- materials[,c(-1,-2)]
# materials_reduc <- read.table(paste(path_iot, "mrMaterials_version2.2.2.txt", sep=""), header=FALSE, sep="\t", dec=".", skip=2)
# materials_reduc <- materials_reduc[,c(-1,-2)]
L_inverse <- read.table(paste(path_iot, "L_inverse.txt", sep=""), header=FALSE, sep=",", dec=".")
# From SUT folder
tot_use <- read.table(paste(path_sut, "mrUse_version2.2.2.txt", sep=""), header=FALSE, sep="\t", dec=".", skip=2)
tot_use <- tot_use[,c(-1,-2,-3)]
# Get total use by product
tot_demand <- rowSums(final_demand) + rowSums(tot_use)
TJ_per_MTOE <- 41870
TWh_per_MTOE <- 11.63
nature_input_idx <- 1:19   # number of rows for E-carrier use after removing the row headers
emission_energy_carrier_idx <- 20:70   # number of rows for E-carrier use after removing the row headers
energy_carrier_supply_idx <- 71:139   # number of rows for E-carrier use after removing the row headers
elec_use_idx <- 184:195   # number of rows for E-carrier use after removing the row headers
elec_supply_idx <- 115:126   # number of rows for E-carrier use after removing the row headers
energy_carrier_use_idx <- 140:208   # number of rows for E-carrier use after removing the row headers
energy_pri_carrier_use_idx <- c(140:154, 187:188, 191:194)   # number of rows for E-carrier use after removing the row headers
energy_sec_carrier_use_idx <- energy_carrier_use_idx[!(energy_carrier_use_idx %in% energy_pri_carrier_use_idx)]
energy_use <- materials[nature_input_idx,]  # The energy extension has not intensities but total consumptions.
y <- 1/tot_demand
y[is.infinite(y)] <- 0
energy_int <- as.matrix(energy_use) %*% diag(y)   # Derive energy intensities by dividing by total demand per sector TJ/M.EUR = MJ/EUR
indirect_E_int <- energy_int %*% as.matrix(L_inverse)   # (intensity by sector) * (I-A)^-1
# indirect emission intensity
indirect_em_int <- as.matrix(emissions) %*% as.matrix(L_inverse)   # (intensity by sector) * (I-A)^-1
# Categorization based on IEA balance builder
idx_coalpeat <- c(3:10, 18:20, 57:60)
idx_crude <- c(11, 13:14, 41)
idx_oilprod <- c(21:38)
idx_natgas <- 12
idx_bio <- c(1:2, 16:17, 40, 42:44, 61, 63:69)
idx_nuclear <- c(15,39)
idx_elecheat <- c(45:56)
c(idx_elecheat, idx_nuclear, idx_bio, idx_natgas,idx_oilprod)
order(c(idx_elecheat, idx_nuclear, idx_bio, idx_natgas,idx_oilprod, idx_crude, idx_coalpeat))
sort(c(idx_elecheat, idx_nuclear, idx_bio, idx_natgas,idx_oilprod, idx_crude, idx_coalpeat))
length(sort(c(idx_elecheat, idx_nuclear, idx_bio, idx_natgas,idx_oilprod, idx_crude, idx_coalpeat)))
